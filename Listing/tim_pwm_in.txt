; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o..\output\tim_pwm_in.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\tim_pwm_in.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\BSP -I..\CMSIS -I..\Lib\inc -I..\User -I"E:\Program files\keil-arm\ARM\RV31\INC" -I"E:\Program files\keil-arm\ARM\CMSIS\Include" -I"E:\Program files\keil-arm\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\output\tim_pwm_in.crf ..\BSP\Tim_PWM_In.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Rc_DataAnl PROC
;;;5      
;;;6      static void Rc_DataAnl(void)
000000  48e0              LDR      r0,|L1.900|
;;;7      {
;;;8      	Rc_Data.THROTTLE		=	Rc_Pwm_In[2];
000002  8880              LDRH     r0,[r0,#4]  ; Rc_Pwm_In
000004  b200              SXTH     r0,r0
000006  49e0              LDR      r1,|L1.904|
000008  8088              STRH     r0,[r1,#4]
;;;9      	Rc_Data.YAW				=	Rc_Pwm_In[3];
00000a  48de              LDR      r0,|L1.900|
00000c  88c0              LDRH     r0,[r0,#6]  ; Rc_Pwm_In
00000e  b200              SXTH     r0,r0
000010  80c8              STRH     r0,[r1,#6]
;;;10     	Rc_Data.ROLL			=	Rc_Pwm_In[1];
000012  48dc              LDR      r0,|L1.900|
000014  8840              LDRH     r0,[r0,#2]  ; Rc_Pwm_In
000016  b200              SXTH     r0,r0
000018  8008              STRH     r0,[r1,#0]
;;;11     	Rc_Data.PITCH			=	Rc_Pwm_In[0];
00001a  48da              LDR      r0,|L1.900|
00001c  8800              LDRH     r0,[r0,#0]  ; Rc_Pwm_In
00001e  b200              SXTH     r0,r0
000020  8048              STRH     r0,[r1,#2]
;;;12     	
;;;13     }
000022  4770              BX       lr
;;;14     void Rc_GetValue(T_RC_Data *temp)
                          ENDP

                  Rc_GetValue PROC
000024  49d8              LDR      r1,|L1.904|
;;;15     {
;;;16     	temp->THROTTLE	= Rc_Data.THROTTLE;
000026  8889              LDRH     r1,[r1,#4]  ; Rc_Data
000028  8081              STRH     r1,[r0,#4]
;;;17     	temp->YAW		= Rc_Data.YAW;
00002a  49d7              LDR      r1,|L1.904|
00002c  88c9              LDRH     r1,[r1,#6]  ; Rc_Data
00002e  80c1              STRH     r1,[r0,#6]
;;;18     	temp->ROLL		= Rc_Data.ROLL;
000030  49d5              LDR      r1,|L1.904|
000032  8809              LDRH     r1,[r1,#0]  ; Rc_Data
000034  8001              STRH     r1,[r0,#0]
;;;19     	temp->PITCH		= Rc_Data.PITCH;	
000036  49d4              LDR      r1,|L1.904|
000038  8849              LDRH     r1,[r1,#2]  ; Rc_Data
00003a  8041              STRH     r1,[r0,#2]
;;;20     }
00003c  4770              BX       lr
;;;21     static void NVIC_Config(void)
                          ENDP

                  NVIC_Config PROC
00003e  b508              PUSH     {r3,lr}
;;;22     {
;;;23       NVIC_InitTypeDef NVIC_InitStructure;
;;;24       
;;;25       /* Configure one bit for preemption priority */
;;;26       NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
000040  f44f60e0          MOV      r0,#0x700
000044  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;27       
;;;28       /* ≈‰÷√P[A|B|C|D|E]0Œ™÷–∂œ‘¥ */
;;;29       NVIC_InitStructure.NVIC_IRQChannel = TIM4_IRQn;
000048  201e              MOVS     r0,#0x1e
00004a  f88d0000          STRB     r0,[sp,#0]
;;;30       NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
00004e  2000              MOVS     r0,#0
000050  f88d0001          STRB     r0,[sp,#1]
;;;31       NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
000054  2001              MOVS     r0,#1
000056  f88d0002          STRB     r0,[sp,#2]
;;;32       NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
00005a  f88d0003          STRB     r0,[sp,#3]
;;;33       NVIC_Init(&NVIC_InitStructure);
00005e  4668              MOV      r0,sp
000060  f7fffffe          BL       NVIC_Init
;;;34     }
000064  bd08              POP      {r3,pc}
;;;35     void Tim_Pwm_In_Init()
                          ENDP

                  Tim_Pwm_In_Init PROC
000066  b500              PUSH     {lr}
;;;36     {
000068  b087              SUB      sp,sp,#0x1c
;;;37     	GPIO_InitTypeDef GPIO_InitStructure;
;;;38     	TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;
;;;39     	TIM_ICInitTypeDef TIM_ICInitStructure;
;;;40     	
;;;41     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE); 
00006a  2101              MOVS     r1,#1
00006c  2004              MOVS     r0,#4
00006e  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;42     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD | RCC_APB2Periph_AFIO,ENABLE);
000072  2101              MOVS     r1,#1
000074  2021              MOVS     r0,#0x21
000076  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;43     	
;;;44     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
00007a  2004              MOVS     r0,#4
00007c  f88d001b          STRB     r0,[sp,#0x1b]
;;;45     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12 | GPIO_Pin_13 |GPIO_Pin_14 | GPIO_Pin_15;
000080  f44f4070          MOV      r0,#0xf000
000084  f8ad0018          STRH     r0,[sp,#0x18]
;;;46     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000088  2003              MOVS     r0,#3
00008a  f88d001a          STRB     r0,[sp,#0x1a]
;;;47     	GPIO_Init(GPIOD,&GPIO_InitStructure);
00008e  a906              ADD      r1,sp,#0x18
000090  48be              LDR      r0,|L1.908|
000092  f7fffffe          BL       GPIO_Init
;;;48     	GPIO_PinRemapConfig(GPIO_Remap_TIM4, ENABLE);
000096  2101              MOVS     r1,#1
000098  0308              LSLS     r0,r1,#12
00009a  f7fffffe          BL       GPIO_PinRemapConfig
;;;49     	
;;;50     	TIM_DeInit(TIM4);
00009e  48bc              LDR      r0,|L1.912|
0000a0  f7fffffe          BL       TIM_DeInit
;;;51     	NVIC_Config();
0000a4  f7fffffe          BL       NVIC_Config
;;;52     	TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;
0000a8  2000              MOVS     r0,#0
0000aa  f8ad0012          STRH     r0,[sp,#0x12]
;;;53     	TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;
0000ae  f8ad000e          STRH     r0,[sp,#0xe]
;;;54     	TIM_TimeBaseInitStructure.TIM_Period = 0xffff;
0000b2  f64f70ff          MOV      r0,#0xffff
0000b6  f8ad0010          STRH     r0,[sp,#0x10]
;;;55     	TIM_TimeBaseInitStructure.TIM_Prescaler = 36;
0000ba  2024              MOVS     r0,#0x24
0000bc  f8ad000c          STRH     r0,[sp,#0xc]
;;;56     
;;;57     	TIM_TimeBaseInit(TIM4,&TIM_TimeBaseInitStructure);
0000c0  a903              ADD      r1,sp,#0xc
0000c2  48b3              LDR      r0,|L1.912|
0000c4  f7fffffe          BL       TIM_TimeBaseInit
;;;58     	
;;;59     	TIM_ICInitStructure.TIM_Channel = TIM_Channel_1;
0000c8  2000              MOVS     r0,#0
0000ca  f8ad0000          STRH     r0,[sp,#0]
;;;60     	TIM_ICInitStructure.TIM_ICFilter = 0x0;
0000ce  f8ad0008          STRH     r0,[sp,#8]
;;;61     	TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
0000d2  f8ad0002          STRH     r0,[sp,#2]
;;;62     	TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;
0000d6  f8ad0006          STRH     r0,[sp,#6]
;;;63     	TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
0000da  2001              MOVS     r0,#1
0000dc  f8ad0004          STRH     r0,[sp,#4]
;;;64     	TIM_ICInit(TIM4,&TIM_ICInitStructure);
0000e0  4669              MOV      r1,sp
0000e2  48ab              LDR      r0,|L1.912|
0000e4  f7fffffe          BL       TIM_ICInit
;;;65     	
;;;66     	TIM_ICInitStructure.TIM_Channel = TIM_Channel_2;
0000e8  2004              MOVS     r0,#4
0000ea  f8ad0000          STRH     r0,[sp,#0]
;;;67     	TIM_ICInitStructure.TIM_ICFilter = 0x0;
0000ee  2000              MOVS     r0,#0
0000f0  f8ad0008          STRH     r0,[sp,#8]
;;;68     	TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
0000f4  f8ad0002          STRH     r0,[sp,#2]
;;;69     	TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;
0000f8  f8ad0006          STRH     r0,[sp,#6]
;;;70     	TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
0000fc  2001              MOVS     r0,#1
0000fe  f8ad0004          STRH     r0,[sp,#4]
;;;71     	TIM_ICInit(TIM4,&TIM_ICInitStructure);
000102  4669              MOV      r1,sp
000104  48a2              LDR      r0,|L1.912|
000106  f7fffffe          BL       TIM_ICInit
;;;72     	
;;;73     	TIM_ICInitStructure.TIM_Channel = TIM_Channel_3;
00010a  2008              MOVS     r0,#8
00010c  f8ad0000          STRH     r0,[sp,#0]
;;;74     	TIM_ICInitStructure.TIM_ICFilter = 0x0;
000110  2000              MOVS     r0,#0
000112  f8ad0008          STRH     r0,[sp,#8]
;;;75     	TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
000116  f8ad0002          STRH     r0,[sp,#2]
;;;76     	TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;
00011a  f8ad0006          STRH     r0,[sp,#6]
;;;77     	TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
00011e  2001              MOVS     r0,#1
000120  f8ad0004          STRH     r0,[sp,#4]
;;;78     	TIM_ICInit(TIM4,&TIM_ICInitStructure);
000124  4669              MOV      r1,sp
000126  489a              LDR      r0,|L1.912|
000128  f7fffffe          BL       TIM_ICInit
;;;79     	
;;;80     	TIM_ICInitStructure.TIM_Channel = TIM_Channel_4;
00012c  200c              MOVS     r0,#0xc
00012e  f8ad0000          STRH     r0,[sp,#0]
;;;81     	TIM_ICInitStructure.TIM_ICFilter = 0x0;
000132  2000              MOVS     r0,#0
000134  f8ad0008          STRH     r0,[sp,#8]
;;;82     	TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
000138  f8ad0002          STRH     r0,[sp,#2]
;;;83     	TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;
00013c  f8ad0006          STRH     r0,[sp,#6]
;;;84     	TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
000140  2001              MOVS     r0,#1
000142  f8ad0004          STRH     r0,[sp,#4]
;;;85     	TIM_ICInit(TIM4,&TIM_ICInitStructure);
000146  4669              MOV      r1,sp
000148  4891              LDR      r0,|L1.912|
00014a  f7fffffe          BL       TIM_ICInit
;;;86     	
;;;87     	TIM_Cmd(TIM4,ENABLE);
00014e  2101              MOVS     r1,#1
000150  488f              LDR      r0,|L1.912|
000152  f7fffffe          BL       TIM_Cmd
;;;88     	
;;;89     	TIM_ITConfig(TIM4,TIM_IT_CC1,ENABLE);
000156  2201              MOVS     r2,#1
000158  2102              MOVS     r1,#2
00015a  488d              LDR      r0,|L1.912|
00015c  f7fffffe          BL       TIM_ITConfig
;;;90     	TIM_ITConfig(TIM4,TIM_IT_CC2,ENABLE);
000160  2201              MOVS     r2,#1
000162  2104              MOVS     r1,#4
000164  488a              LDR      r0,|L1.912|
000166  f7fffffe          BL       TIM_ITConfig
;;;91     	TIM_ITConfig(TIM4,TIM_IT_CC3,ENABLE);
00016a  2201              MOVS     r2,#1
00016c  2108              MOVS     r1,#8
00016e  4888              LDR      r0,|L1.912|
000170  f7fffffe          BL       TIM_ITConfig
;;;92     	TIM_ITConfig(TIM4,TIM_IT_CC4,ENABLE);
000174  2201              MOVS     r2,#1
000176  2110              MOVS     r1,#0x10
000178  4885              LDR      r0,|L1.912|
00017a  f7fffffe          BL       TIM_ITConfig
;;;93     }
00017e  b007              ADD      sp,sp,#0x1c
000180  bd00              POP      {pc}
;;;94     
                          ENDP

                  Tim4_Pwm_In_Irq PROC
;;;95     void Tim4_Pwm_In_Irq()
000182  b510              PUSH     {r4,lr}
;;;96     {
;;;97     	static u16 temp_cnt1,temp_cnt1_2,temp_cnt2,temp_cnt2_2,temp_cnt3,temp_cnt3_2,temp_cnt4,temp_cnt4_2;
;;;98     	
;;;99     	if(TIM4->SR & TIM_IT_CC1)//if(TIM_GetITStatus(TIM2, TIM_IT_CC1) == SET)
000184  4882              LDR      r0,|L1.912|
000186  3010              ADDS     r0,r0,#0x10
000188  8800              LDRH     r0,[r0,#0]
00018a  f0100f02          TST      r0,#2
00018e  d03e              BEQ      |L1.526|
;;;100    	{
;;;101    		u16 ccr1 = TIM4->CCR1;
000190  497f              LDR      r1,|L1.912|
000192  3134              ADDS     r1,r1,#0x34
000194  8808              LDRH     r0,[r1,#0]
;;;102    		TIM4->SR &= ~TIM_FLAG_CC1OF;
000196  497e              LDR      r1,|L1.912|
000198  3110              ADDS     r1,r1,#0x10
00019a  8809              LDRH     r1,[r1,#0]
00019c  f4217100          BIC      r1,r1,#0x200
0001a0  4a7b              LDR      r2,|L1.912|
0001a2  3210              ADDS     r2,r2,#0x10
0001a4  8011              STRH     r1,[r2,#0]
;;;103    		if(GPIOD->IDR & GPIO_Pin_12)
0001a6  4979              LDR      r1,|L1.908|
0001a8  3108              ADDS     r1,r1,#8
0001aa  6809              LDR      r1,[r1,#0]
0001ac  f4115f80          TST      r1,#0x1000
0001b0  d00a              BEQ      |L1.456|
;;;104    		{
;;;105    			temp_cnt1 = ccr1;
0001b2  4978              LDR      r1,|L1.916|
0001b4  8008              STRH     r0,[r1,#0]
;;;106    			TIM4->CCER |= (1<<1);
0001b6  4976              LDR      r1,|L1.912|
0001b8  3120              ADDS     r1,r1,#0x20
0001ba  8809              LDRH     r1,[r1,#0]
0001bc  f0410102          ORR      r1,r1,#2
0001c0  4a73              LDR      r2,|L1.912|
0001c2  3220              ADDS     r2,r2,#0x20
0001c4  8011              STRH     r1,[r2,#0]
0001c6  e021              B        |L1.524|
                  |L1.456|
;;;107    		}
;;;108    		else
;;;109    		{
;;;110    			temp_cnt1_2 = ccr1;
0001c8  4973              LDR      r1,|L1.920|
0001ca  8008              STRH     r0,[r1,#0]
;;;111    			TIM4->CCER &= ~(1<<1);
0001cc  4970              LDR      r1,|L1.912|
0001ce  3120              ADDS     r1,r1,#0x20
0001d0  8809              LDRH     r1,[r1,#0]
0001d2  f0210102          BIC      r1,r1,#2
0001d6  4a6e              LDR      r2,|L1.912|
0001d8  3220              ADDS     r2,r2,#0x20
0001da  8011              STRH     r1,[r2,#0]
;;;112    			if(temp_cnt1_2>=temp_cnt1)
0001dc  496e              LDR      r1,|L1.920|
0001de  8809              LDRH     r1,[r1,#0]  ; temp_cnt1_2
0001e0  4a6c              LDR      r2,|L1.916|
0001e2  8812              LDRH     r2,[r2,#0]  ; temp_cnt1
0001e4  4291              CMP      r1,r2
0001e6  db07              BLT      |L1.504|
;;;113    				Rc_Pwm_In[0] = temp_cnt1_2-temp_cnt1;
0001e8  496b              LDR      r1,|L1.920|
0001ea  8809              LDRH     r1,[r1,#0]  ; temp_cnt1_2
0001ec  4a69              LDR      r2,|L1.916|
0001ee  8812              LDRH     r2,[r2,#0]  ; temp_cnt1
0001f0  1a89              SUBS     r1,r1,r2
0001f2  4a64              LDR      r2,|L1.900|
0001f4  8011              STRH     r1,[r2,#0]
0001f6  e009              B        |L1.524|
                  |L1.504|
;;;114    			else
;;;115    				Rc_Pwm_In[0] = 0xffff-temp_cnt1+temp_cnt1_2;
0001f8  4966              LDR      r1,|L1.916|
0001fa  8809              LDRH     r1,[r1,#0]  ; temp_cnt1
0001fc  f64f72ff          MOV      r2,#0xffff
000200  1a51              SUBS     r1,r2,r1
000202  4a65              LDR      r2,|L1.920|
000204  8812              LDRH     r2,[r2,#0]  ; temp_cnt1_2
000206  4411              ADD      r1,r1,r2
000208  4a5e              LDR      r2,|L1.900|
00020a  8011              STRH     r1,[r2,#0]
                  |L1.524|
;;;116    		}
;;;117    	}
00020c  bf00              NOP      
                  |L1.526|
;;;118    	if(TIM4->SR & TIM_IT_CC2)
00020e  4860              LDR      r0,|L1.912|
000210  3010              ADDS     r0,r0,#0x10
000212  8800              LDRH     r0,[r0,#0]
000214  f0100f04          TST      r0,#4
000218  d036              BEQ      |L1.648|
;;;119    	{
;;;120    		u16 ccr2 = TIM4->CCR2;
00021a  495d              LDR      r1,|L1.912|
00021c  3138              ADDS     r1,r1,#0x38
00021e  8808              LDRH     r0,[r1,#0]
;;;121    		if(GPIOD->IDR & GPIO_Pin_13)
000220  495a              LDR      r1,|L1.908|
000222  3108              ADDS     r1,r1,#8
000224  6809              LDR      r1,[r1,#0]
000226  f4115f00          TST      r1,#0x2000
00022a  d00a              BEQ      |L1.578|
;;;122    		{
;;;123    			temp_cnt2 = ccr2;
00022c  495b              LDR      r1,|L1.924|
00022e  8008              STRH     r0,[r1,#0]
;;;124    			TIM4->CCER |= (1<<5);
000230  4957              LDR      r1,|L1.912|
000232  3120              ADDS     r1,r1,#0x20
000234  8809              LDRH     r1,[r1,#0]
000236  f0410120          ORR      r1,r1,#0x20
00023a  4a55              LDR      r2,|L1.912|
00023c  3220              ADDS     r2,r2,#0x20
00023e  8011              STRH     r1,[r2,#0]
000240  e021              B        |L1.646|
                  |L1.578|
;;;125    		}
;;;126    		else
;;;127    		{
;;;128    			temp_cnt2_2 = ccr2;
000242  4957              LDR      r1,|L1.928|
000244  8008              STRH     r0,[r1,#0]
;;;129    			TIM4->CCER &= ~(1<<5);
000246  4952              LDR      r1,|L1.912|
000248  3120              ADDS     r1,r1,#0x20
00024a  8809              LDRH     r1,[r1,#0]
00024c  f0210120          BIC      r1,r1,#0x20
000250  4a4f              LDR      r2,|L1.912|
000252  3220              ADDS     r2,r2,#0x20
000254  8011              STRH     r1,[r2,#0]
;;;130    			if(temp_cnt2_2>=temp_cnt2)
000256  4952              LDR      r1,|L1.928|
000258  8809              LDRH     r1,[r1,#0]  ; temp_cnt2_2
00025a  4a50              LDR      r2,|L1.924|
00025c  8812              LDRH     r2,[r2,#0]  ; temp_cnt2
00025e  4291              CMP      r1,r2
000260  db07              BLT      |L1.626|
;;;131    				Rc_Pwm_In[1] = temp_cnt2_2-temp_cnt2;
000262  494f              LDR      r1,|L1.928|
000264  8809              LDRH     r1,[r1,#0]  ; temp_cnt2_2
000266  4a4d              LDR      r2,|L1.924|
000268  8812              LDRH     r2,[r2,#0]  ; temp_cnt2
00026a  1a89              SUBS     r1,r1,r2
00026c  4a45              LDR      r2,|L1.900|
00026e  8051              STRH     r1,[r2,#2]
000270  e009              B        |L1.646|
                  |L1.626|
;;;132    			else
;;;133    				Rc_Pwm_In[1] = 0xffff-temp_cnt2+temp_cnt2_2;
000272  494a              LDR      r1,|L1.924|
000274  8809              LDRH     r1,[r1,#0]  ; temp_cnt2
000276  f64f72ff          MOV      r2,#0xffff
00027a  1a51              SUBS     r1,r2,r1
00027c  4a48              LDR      r2,|L1.928|
00027e  8812              LDRH     r2,[r2,#0]  ; temp_cnt2_2
000280  4411              ADD      r1,r1,r2
000282  4a40              LDR      r2,|L1.900|
000284  8051              STRH     r1,[r2,#2]
                  |L1.646|
;;;134    		}
;;;135    	}
000286  bf00              NOP      
                  |L1.648|
;;;136    	if(TIM4->SR & TIM_IT_CC3)
000288  4841              LDR      r0,|L1.912|
00028a  3010              ADDS     r0,r0,#0x10
00028c  8800              LDRH     r0,[r0,#0]
00028e  f0100f08          TST      r0,#8
000292  d036              BEQ      |L1.770|
;;;137    	{
;;;138    		u16 ccr3 = TIM4->CCR3;
000294  493e              LDR      r1,|L1.912|
000296  313c              ADDS     r1,r1,#0x3c
000298  8808              LDRH     r0,[r1,#0]
;;;139    		if(GPIOD->IDR & GPIO_Pin_14)
00029a  493c              LDR      r1,|L1.908|
00029c  3108              ADDS     r1,r1,#8
00029e  6809              LDR      r1,[r1,#0]
0002a0  f4114f80          TST      r1,#0x4000
0002a4  d00a              BEQ      |L1.700|
;;;140    		{
;;;141    			temp_cnt3 = ccr3;
0002a6  493f              LDR      r1,|L1.932|
0002a8  8008              STRH     r0,[r1,#0]
;;;142    			TIM4->CCER |= (1<<9);
0002aa  4939              LDR      r1,|L1.912|
0002ac  3120              ADDS     r1,r1,#0x20
0002ae  8809              LDRH     r1,[r1,#0]
0002b0  f4417100          ORR      r1,r1,#0x200
0002b4  4a36              LDR      r2,|L1.912|
0002b6  3220              ADDS     r2,r2,#0x20
0002b8  8011              STRH     r1,[r2,#0]
0002ba  e021              B        |L1.768|
                  |L1.700|
;;;143    		}
;;;144    		else
;;;145    		{
;;;146    			temp_cnt3_2 = ccr3;
0002bc  493a              LDR      r1,|L1.936|
0002be  8008              STRH     r0,[r1,#0]
;;;147    			TIM4->CCER &= ~(1<<9);
0002c0  4933              LDR      r1,|L1.912|
0002c2  3120              ADDS     r1,r1,#0x20
0002c4  8809              LDRH     r1,[r1,#0]
0002c6  f4217100          BIC      r1,r1,#0x200
0002ca  4a31              LDR      r2,|L1.912|
0002cc  3220              ADDS     r2,r2,#0x20
0002ce  8011              STRH     r1,[r2,#0]
;;;148    			if(temp_cnt3_2>=temp_cnt3)
0002d0  4935              LDR      r1,|L1.936|
0002d2  8809              LDRH     r1,[r1,#0]  ; temp_cnt3_2
0002d4  4a33              LDR      r2,|L1.932|
0002d6  8812              LDRH     r2,[r2,#0]  ; temp_cnt3
0002d8  4291              CMP      r1,r2
0002da  db07              BLT      |L1.748|
;;;149    				Rc_Pwm_In[2] = temp_cnt3_2-temp_cnt3;
0002dc  4932              LDR      r1,|L1.936|
0002de  8809              LDRH     r1,[r1,#0]  ; temp_cnt3_2
0002e0  4a30              LDR      r2,|L1.932|
0002e2  8812              LDRH     r2,[r2,#0]  ; temp_cnt3
0002e4  1a89              SUBS     r1,r1,r2
0002e6  4a27              LDR      r2,|L1.900|
0002e8  8091              STRH     r1,[r2,#4]
0002ea  e009              B        |L1.768|
                  |L1.748|
;;;150    			else
;;;151    				Rc_Pwm_In[2] = 0xffff-temp_cnt3+temp_cnt3_2;
0002ec  492d              LDR      r1,|L1.932|
0002ee  8809              LDRH     r1,[r1,#0]  ; temp_cnt3
0002f0  f64f72ff          MOV      r2,#0xffff
0002f4  1a51              SUBS     r1,r2,r1
0002f6  4a2c              LDR      r2,|L1.936|
0002f8  8812              LDRH     r2,[r2,#0]  ; temp_cnt3_2
0002fa  4411              ADD      r1,r1,r2
0002fc  4a21              LDR      r2,|L1.900|
0002fe  8091              STRH     r1,[r2,#4]
                  |L1.768|
;;;152    		}
;;;153    	}
000300  bf00              NOP      
                  |L1.770|
;;;154    	if(TIM4->SR & TIM_IT_CC4)
000302  4823              LDR      r0,|L1.912|
000304  3010              ADDS     r0,r0,#0x10
000306  8800              LDRH     r0,[r0,#0]
000308  f0100f10          TST      r0,#0x10
00030c  d038              BEQ      |L1.896|
;;;155    	{
;;;156    		u16 ccr4 = TIM4->CCR4;
00030e  4820              LDR      r0,|L1.912|
000310  3040              ADDS     r0,r0,#0x40
000312  8804              LDRH     r4,[r0,#0]
;;;157    		if(GPIOD->IDR & GPIO_Pin_15)
000314  481d              LDR      r0,|L1.908|
000316  3008              ADDS     r0,r0,#8
000318  6800              LDR      r0,[r0,#0]
00031a  f4104f00          TST      r0,#0x8000
00031e  d00a              BEQ      |L1.822|
;;;158    		{
;;;159    			temp_cnt4 = ccr4;
000320  4822              LDR      r0,|L1.940|
000322  8004              STRH     r4,[r0,#0]
;;;160    			TIM4->CCER |= (1<<13);
000324  481a              LDR      r0,|L1.912|
000326  3020              ADDS     r0,r0,#0x20
000328  8800              LDRH     r0,[r0,#0]
00032a  f4405000          ORR      r0,r0,#0x2000
00032e  4918              LDR      r1,|L1.912|
000330  3120              ADDS     r1,r1,#0x20
000332  8008              STRH     r0,[r1,#0]
000334  e023              B        |L1.894|
                  |L1.822|
;;;161    		}
;;;162    		else
;;;163    		{
;;;164    			temp_cnt4_2 = ccr4;
000336  481e              LDR      r0,|L1.944|
000338  8004              STRH     r4,[r0,#0]
;;;165    			TIM4->CCER &= ~(1<<13);
00033a  4815              LDR      r0,|L1.912|
00033c  3020              ADDS     r0,r0,#0x20
00033e  8800              LDRH     r0,[r0,#0]
000340  f4205000          BIC      r0,r0,#0x2000
000344  4912              LDR      r1,|L1.912|
000346  3120              ADDS     r1,r1,#0x20
000348  8008              STRH     r0,[r1,#0]
;;;166    			if(temp_cnt4_2>=temp_cnt4)
00034a  4819              LDR      r0,|L1.944|
00034c  8800              LDRH     r0,[r0,#0]  ; temp_cnt4_2
00034e  4917              LDR      r1,|L1.940|
000350  8809              LDRH     r1,[r1,#0]  ; temp_cnt4
000352  4288              CMP      r0,r1
000354  db07              BLT      |L1.870|
;;;167    				Rc_Pwm_In[3] = temp_cnt4_2-temp_cnt4;
000356  4816              LDR      r0,|L1.944|
000358  8800              LDRH     r0,[r0,#0]  ; temp_cnt4_2
00035a  4914              LDR      r1,|L1.940|
00035c  8809              LDRH     r1,[r1,#0]  ; temp_cnt4
00035e  1a40              SUBS     r0,r0,r1
000360  4908              LDR      r1,|L1.900|
000362  80c8              STRH     r0,[r1,#6]
000364  e009              B        |L1.890|
                  |L1.870|
;;;168    			else
;;;169    				Rc_Pwm_In[3] = 0xffff-temp_cnt4+temp_cnt4_2;
000366  4811              LDR      r0,|L1.940|
000368  8800              LDRH     r0,[r0,#0]  ; temp_cnt4
00036a  f64f71ff          MOV      r1,#0xffff
00036e  1a08              SUBS     r0,r1,r0
000370  490f              LDR      r1,|L1.944|
000372  8809              LDRH     r1,[r1,#0]  ; temp_cnt4_2
000374  4408              ADD      r0,r0,r1
000376  4903              LDR      r1,|L1.900|
000378  80c8              STRH     r0,[r1,#6]
                  |L1.890|
;;;170    				
;;;171    			Rc_DataAnl();
00037a  f7fffffe          BL       Rc_DataAnl
                  |L1.894|
;;;172    		}
;;;173    	}
00037e  bf00              NOP      
                  |L1.896|
;;;174    }
000380  bd10              POP      {r4,pc}
                          ENDP

000382  0000              DCW      0x0000
                  |L1.900|
                          DCD      Rc_Pwm_In
                  |L1.904|
                          DCD      Rc_Data
                  |L1.908|
                          DCD      0x40011400
                  |L1.912|
                          DCD      0x40000800
                  |L1.916|
                          DCD      temp_cnt1
                  |L1.920|
                          DCD      temp_cnt1_2
                  |L1.924|
                          DCD      temp_cnt2
                  |L1.928|
                          DCD      temp_cnt2_2
                  |L1.932|
                          DCD      temp_cnt3
                  |L1.936|
                          DCD      temp_cnt3_2
                  |L1.940|
                          DCD      temp_cnt4
                  |L1.944|
                          DCD      temp_cnt4_2

                          AREA ||.data||, DATA, ALIGN=1

                  temp_cnt1
000000  0000              DCB      0x00,0x00
                  temp_cnt1_2
000002  0000              DCB      0x00,0x00
                  temp_cnt2
000004  0000              DCB      0x00,0x00
                  temp_cnt2_2
000006  0000              DCB      0x00,0x00
                  temp_cnt3
000008  0000              DCB      0x00,0x00
                  temp_cnt3_2
00000a  0000              DCB      0x00,0x00
                  temp_cnt4
00000c  0000              DCB      0x00,0x00
                  temp_cnt4_2
00000e  0000              DCB      0x00,0x00
                  Rc_Pwm_In
                          %        8
                  Rc_Data
                          %        8
