; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o..\output\tim3.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\tim3.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\BSP -I..\CMSIS -I..\Lib\inc -I..\User -I"E:\Program Files\keil for arm4.7\ARM\RV31\INC" -I"E:\Program Files\keil for arm4.7\ARM\CMSIS\Include" -I"E:\Program Files\keil for arm4.7\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\output\tim3.crf ..\BSP\Tim3.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  NVIC_Config PROC
;;;2      u32 TIM2_IRQCNT;
;;;3      static void NVIC_Config(void)
000000  b508              PUSH     {r3,lr}
;;;4      {
;;;5        NVIC_InitTypeDef NVIC_InitStructure;
;;;6        
;;;7        /* Configure one bit for preemption priority */
;;;8        NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
000002  f44f60e0          MOV      r0,#0x700
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;9        
;;;10       /* 配置P[A|B|C|D|E]0为中断源 */
;;;11       NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
00000a  201c              MOVS     r0,#0x1c
00000c  f88d0000          STRB     r0,[sp,#0]
;;;12       NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
000010  2000              MOVS     r0,#0
000012  f88d0001          STRB     r0,[sp,#1]
;;;13       NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;
000016  2002              MOVS     r0,#2
000018  f88d0002          STRB     r0,[sp,#2]
;;;14       NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
00001c  2001              MOVS     r0,#1
00001e  f88d0003          STRB     r0,[sp,#3]
;;;15       NVIC_Init(&NVIC_InitStructure);
000022  4668              MOV      r0,sp
000024  f7fffffe          BL       NVIC_Init
;;;16     }
000028  bd08              POP      {r3,pc}
;;;17     void Tim2_Init()
                          ENDP

                  Tim2_Init PROC
00002a  b50e              PUSH     {r1-r3,lr}
;;;18     {
;;;19     	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
;;;20     	//基础设置，时基和比较输出设置，由于这里只需定时，所以不用OC比较输出
;;;21     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);
00002c  2101              MOVS     r1,#1
00002e  4608              MOV      r0,r1
000030  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;22     	
;;;23     	TIM_DeInit(TIM2);
000034  f04f4080          MOV      r0,#0x40000000
000038  f7fffffe          BL       TIM_DeInit
;;;24     	NVIC_Config();
00003c  f7fffffe          BL       NVIC_Config
;;;25     	TIM_TimeBaseStructure.TIM_Period=500;//装载值
000040  f44f70fa          MOV      r0,#0x1f4
000044  f8ad0004          STRH     r0,[sp,#4]
;;;26     	//prescaler is 1200,that is 72000000/72/500=2000Hz;
;;;27     	TIM_TimeBaseStructure.TIM_Prescaler=72-1;//分频系数
000048  2047              MOVS     r0,#0x47
00004a  f8ad0000          STRH     r0,[sp,#0]
;;;28     	//set clock division 
;;;29     	TIM_TimeBaseStructure.TIM_ClockDivision=TIM_CKD_DIV1; //or TIM_CKD_DIV2 or TIM_CKD_DIV4
00004e  2000              MOVS     r0,#0
000050  f8ad0006          STRH     r0,[sp,#6]
;;;30     	//count up
;;;31     	TIM_TimeBaseStructure.TIM_CounterMode=TIM_CounterMode_Up;
000054  f8ad0002          STRH     r0,[sp,#2]
;;;32     	
;;;33     	TIM_TimeBaseInit(TIM2,&TIM_TimeBaseStructure);
000058  4669              MOV      r1,sp
00005a  f04f4080          MOV      r0,#0x40000000
00005e  f7fffffe          BL       TIM_TimeBaseInit
;;;34     	//clear the TIM2 overflow interrupt flag
;;;35     	TIM_ClearFlag(TIM2,TIM_FLAG_Update);
000062  2101              MOVS     r1,#1
000064  0788              LSLS     r0,r1,#30
000066  f7fffffe          BL       TIM_ClearFlag
;;;36     	//TIM2 overflow interrupt enable
;;;37     	TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE);
00006a  2201              MOVS     r2,#1
00006c  4611              MOV      r1,r2
00006e  0790              LSLS     r0,r2,#30
000070  f7fffffe          BL       TIM_ITConfig
;;;38     	//enable TIM2
;;;39     	TIM_Cmd(TIM2,ENABLE);
000074  2101              MOVS     r1,#1
000076  0788              LSLS     r0,r1,#30
000078  f7fffffe          BL       TIM_Cmd
;;;40     }
00007c  bd0e              POP      {r1-r3,pc}
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  TIM2_IRQCNT
                          DCD      0x00000000
