; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o..\output\motor.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\motor.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\BSP -I..\CMSIS -I..\Lib\inc -I..\User -I"E:\Program files\keil-arm\ARM\RV31\INC" -I"E:\Program files\keil-arm\ARM\CMSIS\Include" -I"E:\Program files\keil-arm\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\output\motor.crf ..\BSP\Motor.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  PWM_GPIO_Init PROC
;;;5      
;;;6      static void PWM_GPIO_Init()
000000  b508              PUSH     {r3,lr}
;;;7      {
;;;8      	 GPIO_InitTypeDef  GPIO_InitPWM;
;;;9      	 
;;;10     	 RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE); 
000002  2101              MOVS     r1,#1
000004  2002              MOVS     r0,#2
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;11     	 RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC | RCC_APB2Periph_AFIO,ENABLE);
00000a  2101              MOVS     r1,#1
00000c  2011              MOVS     r0,#0x11
00000e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;12     	 
;;;13     	 GPIO_InitPWM.GPIO_Mode = GPIO_Mode_AF_PP ;
000012  2018              MOVS     r0,#0x18
000014  f88d0003          STRB     r0,[sp,#3]
;;;14     	 GPIO_InitPWM.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9;
000018  f44f7070          MOV      r0,#0x3c0
00001c  f8ad0000          STRH     r0,[sp,#0]
;;;15     	 GPIO_InitPWM.GPIO_Speed = GPIO_Speed_50MHz;
000020  2003              MOVS     r0,#3
000022  f88d0002          STRB     r0,[sp,#2]
;;;16     	 GPIO_Init(GPIOC,&GPIO_InitPWM);
000026  4669              MOV      r1,sp
000028  486e              LDR      r0,|L1.484|
00002a  f7fffffe          BL       GPIO_Init
;;;17     	 GPIO_PinRemapConfig(GPIO_FullRemap_TIM3, ENABLE);
00002e  2101              MOVS     r1,#1
000030  486d              LDR      r0,|L1.488|
000032  f7fffffe          BL       GPIO_PinRemapConfig
;;;18     }
000036  bd08              POP      {r3,pc}
;;;19     
                          ENDP

                  PWM_Mode_Init PROC
;;;20     static void PWM_Mode_Init()
000038  b5fe              PUSH     {r1-r7,lr}
;;;21     {
;;;22     	TIM_TimeBaseInitTypeDef TIM_TimeBaseInitPWM;
;;;23     	
;;;24     	u16 CCR1_Val = 0;        
00003a  2700              MOVS     r7,#0
;;;25     	u16 CCR2_Val = 0;
00003c  2400              MOVS     r4,#0
;;;26     	u16 CCR3_Val = 0;
00003e  2500              MOVS     r5,#0
;;;27     	u16 CCR4_Val = 0;
000040  2600              MOVS     r6,#0
;;;28     	
;;;29     	TIM_TimeBaseInitPWM.TIM_ClockDivision = TIM_CKD_DIV1;
000042  2000              MOVS     r0,#0
000044  f8ad0006          STRH     r0,[sp,#6]
;;;30     	TIM_TimeBaseInitPWM.TIM_CounterMode = TIM_CounterMode_Up;
000048  f8ad0002          STRH     r0,[sp,#2]
;;;31     	TIM_TimeBaseInitPWM.TIM_Period = 40000; //50hz
00004c  f6494040          MOV      r0,#0x9c40
000050  f8ad0004          STRH     r0,[sp,#4]
;;;32     	TIM_TimeBaseInitPWM.TIM_Prescaler = 36; //2MÊ±ÖÓ
000054  2024              MOVS     r0,#0x24
000056  f8ad0000          STRH     r0,[sp,#0]
;;;33     	
;;;34     	TIM_TimeBaseInit(TIM3,&TIM_TimeBaseInitPWM);
00005a  4669              MOV      r1,sp
00005c  4863              LDR      r0,|L1.492|
00005e  f7fffffe          BL       TIM_TimeBaseInit
;;;35     	
;;;36     	TIM_OCInitPWM.TIM_OCMode = TIM_OCMode_PWM1 ;
000062  2060              MOVS     r0,#0x60
000064  4962              LDR      r1,|L1.496|
000066  8008              STRH     r0,[r1,#0]
;;;37     	TIM_OCInitPWM.TIM_OCPolarity = TIM_OCPolarity_High;
000068  2000              MOVS     r0,#0
00006a  8108              STRH     r0,[r1,#8]
;;;38     	TIM_OCInitPWM.TIM_OutputState = TIM_OutputState_Enable ;
00006c  2001              MOVS     r0,#1
00006e  8048              STRH     r0,[r1,#2]
;;;39     	TIM_OCInitPWM.TIM_Pulse = CCR1_Val;
000070  4608              MOV      r0,r1
000072  80c7              STRH     r7,[r0,#6]
;;;40     	TIM_OC1Init(TIM3,&TIM_OCInitPWM);
000074  485d              LDR      r0,|L1.492|
000076  f7fffffe          BL       TIM_OC1Init
;;;41     	TIM_OC1PolarityConfig(TIM3,ENABLE);
00007a  2101              MOVS     r1,#1
00007c  485b              LDR      r0,|L1.492|
00007e  f7fffffe          BL       TIM_OC1PolarityConfig
;;;42     	
;;;43     	TIM_OCInitPWM.TIM_OutputState = TIM_OutputState_Enable ;
000082  2001              MOVS     r0,#1
000084  495a              LDR      r1,|L1.496|
000086  8048              STRH     r0,[r1,#2]
;;;44     	TIM_OCInitPWM.TIM_Pulse = CCR2_Val;
000088  4608              MOV      r0,r1
00008a  80c4              STRH     r4,[r0,#6]
;;;45     	TIM_OC2Init(TIM3,&TIM_OCInitPWM);
00008c  4857              LDR      r0,|L1.492|
00008e  f7fffffe          BL       TIM_OC2Init
;;;46     	TIM_OC2PolarityConfig(TIM3,ENABLE);
000092  2101              MOVS     r1,#1
000094  4855              LDR      r0,|L1.492|
000096  f7fffffe          BL       TIM_OC2PolarityConfig
;;;47     	
;;;48     	TIM_OCInitPWM.TIM_OutputState = TIM_OutputState_Enable ;
00009a  2001              MOVS     r0,#1
00009c  4954              LDR      r1,|L1.496|
00009e  8048              STRH     r0,[r1,#2]
;;;49     	TIM_OCInitPWM.TIM_Pulse = CCR3_Val;
0000a0  4608              MOV      r0,r1
0000a2  80c5              STRH     r5,[r0,#6]
;;;50     	TIM_OC3Init(TIM3,&TIM_OCInitPWM);
0000a4  4851              LDR      r0,|L1.492|
0000a6  f7fffffe          BL       TIM_OC3Init
;;;51     	TIM_OC3PolarityConfig(TIM3,ENABLE);
0000aa  2101              MOVS     r1,#1
0000ac  484f              LDR      r0,|L1.492|
0000ae  f7fffffe          BL       TIM_OC3PolarityConfig
;;;52     	
;;;53     	TIM_OCInitPWM.TIM_OutputState = TIM_OutputState_Enable ;
0000b2  2001              MOVS     r0,#1
0000b4  494e              LDR      r1,|L1.496|
0000b6  8048              STRH     r0,[r1,#2]
;;;54     	TIM_OCInitPWM.TIM_Pulse = CCR4_Val;
0000b8  4608              MOV      r0,r1
0000ba  80c6              STRH     r6,[r0,#6]
;;;55     	TIM_OC4Init(TIM3,&TIM_OCInitPWM);
0000bc  484b              LDR      r0,|L1.492|
0000be  f7fffffe          BL       TIM_OC4Init
;;;56     	TIM_OC4PolarityConfig(TIM3,ENABLE);	
0000c2  2101              MOVS     r1,#1
0000c4  4849              LDR      r0,|L1.492|
0000c6  f7fffffe          BL       TIM_OC4PolarityConfig
;;;57     	
;;;58     	TIM_ARRPreloadConfig(TIM3, ENABLE);
0000ca  2101              MOVS     r1,#1
0000cc  4847              LDR      r0,|L1.492|
0000ce  f7fffffe          BL       TIM_ARRPreloadConfig
;;;59     	TIM_Cmd(TIM3, ENABLE); 
0000d2  2101              MOVS     r1,#1
0000d4  4845              LDR      r0,|L1.492|
0000d6  f7fffffe          BL       TIM_Cmd
;;;60     }
0000da  bdfe              POP      {r1-r7,pc}
;;;61     void PWM_Change(uint8_t channel,uint16_t CCR_Val)
                          ENDP

                  PWM_Change PROC
0000dc  b570              PUSH     {r4-r6,lr}
;;;62     {
0000de  4605              MOV      r5,r0
0000e0  460c              MOV      r4,r1
;;;63     	if (CCR_Val>Max_CCR_Val)
0000e2  f5b46f7a          CMP      r4,#0xfa0
0000e6  dd04              BLE      |L1.242|
;;;64     		TIM_OCInitPWM.TIM_Pulse = Max_CCR_Val;
0000e8  f44f607a          MOV      r0,#0xfa0
0000ec  4940              LDR      r1,|L1.496|
0000ee  80c8              STRH     r0,[r1,#6]
0000f0  e009              B        |L1.262|
                  |L1.242|
;;;65     	else if (CCR_Val<2000)
0000f2  f5b46ffa          CMP      r4,#0x7d0
0000f6  da04              BGE      |L1.258|
;;;66     		TIM_OCInitPWM.TIM_Pulse = 2000;
0000f8  f44f60fa          MOV      r0,#0x7d0
0000fc  493c              LDR      r1,|L1.496|
0000fe  80c8              STRH     r0,[r1,#6]
000100  e001              B        |L1.262|
                  |L1.258|
;;;67     	else
;;;68     		TIM_OCInitPWM.TIM_Pulse = CCR_Val;
000102  483b              LDR      r0,|L1.496|
000104  80c4              STRH     r4,[r0,#6]
                  |L1.262|
;;;69     	switch (channel)
000106  2d01              CMP      r5,#1
000108  d006              BEQ      |L1.280|
00010a  2d02              CMP      r5,#2
00010c  d009              BEQ      |L1.290|
00010e  2d03              CMP      r5,#3
000110  d00c              BEQ      |L1.300|
000112  2d04              CMP      r5,#4
000114  d114              BNE      |L1.320|
000116  e00e              B        |L1.310|
                  |L1.280|
;;;70     	{
;;;71     		case 1:
;;;72     			TIM_OC1Init(TIM3,&TIM_OCInitPWM);
000118  4935              LDR      r1,|L1.496|
00011a  4834              LDR      r0,|L1.492|
00011c  f7fffffe          BL       TIM_OC1Init
;;;73     		case 2:
000120  bf00              NOP      
                  |L1.290|
;;;74     			TIM_OC2Init(TIM3,&TIM_OCInitPWM);
000122  4933              LDR      r1,|L1.496|
000124  4831              LDR      r0,|L1.492|
000126  f7fffffe          BL       TIM_OC2Init
;;;75     		case 3:
00012a  bf00              NOP      
                  |L1.300|
;;;76     			TIM_OC3Init(TIM3,&TIM_OCInitPWM);
00012c  4930              LDR      r1,|L1.496|
00012e  482f              LDR      r0,|L1.492|
000130  f7fffffe          BL       TIM_OC3Init
;;;77     		case 4:
000134  bf00              NOP      
                  |L1.310|
;;;78     			TIM_OC4Init(TIM3,&TIM_OCInitPWM);
000136  492e              LDR      r1,|L1.496|
000138  482c              LDR      r0,|L1.492|
00013a  f7fffffe          BL       TIM_OC4Init
00013e  bf00              NOP                            ;69
                  |L1.320|
000140  bf00              NOP                            ;69
;;;79     	}		
;;;80     }
000142  bd70              POP      {r4-r6,pc}
;;;81     void PWM_Init()
                          ENDP

                  motor_Init PROC
;;;86     }
;;;87     void motor_Init()
000144  b510              PUSH     {r4,lr}
;;;88     {
;;;89     	int val;
;;;90     	val = 2000;
000146  f44f64fa          MOV      r4,#0x7d0
;;;91     	PWM_Change(1,val);
00014a  4621              MOV      r1,r4
00014c  2001              MOVS     r0,#1
00014e  f7fffffe          BL       PWM_Change
;;;92     	PWM_Change(2,val);
000152  4621              MOV      r1,r4
000154  2002              MOVS     r0,#2
000156  f7fffffe          BL       PWM_Change
;;;93     	PWM_Change(3,val);
00015a  4621              MOV      r1,r4
00015c  2003              MOVS     r0,#3
00015e  f7fffffe          BL       PWM_Change
;;;94     	PWM_Change(4,val);
000162  4621              MOV      r1,r4
000164  2004              MOVS     r0,#4
000166  f7fffffe          BL       PWM_Change
;;;95     //	time_waitMs(5);
;;;96     }
00016a  bd10              POP      {r4,pc}
;;;97     
                          ENDP

                  PWM_Init PROC
;;;80     }
;;;81     void PWM_Init()
00016c  b510              PUSH     {r4,lr}
;;;82     {
;;;83     	PWM_GPIO_Init();
00016e  f7fffffe          BL       PWM_GPIO_Init
;;;84     	PWM_Mode_Init();
000172  f7fffffe          BL       PWM_Mode_Init
;;;85     	motor_Init();
000176  f7fffffe          BL       motor_Init
;;;86     }
00017a  bd10              POP      {r4,pc}
;;;87     void motor_Init()
                          ENDP

                  motor_Control PROC
;;;97     
;;;98     void motor_Control(int16_t CCR_Val1,int16_t CCR_Val2,int16_t CCR_Val3,int16_t CCR_Val4)
00017c  b530              PUSH     {r4,r5,lr}
;;;99     {
;;;100    	if(CCR_Val1>Max_CCR_Val) CCR_Val1=Max_CCR_Val;
00017e  f5b06f7a          CMP      r0,#0xfa0
000182  dd01              BLE      |L1.392|
000184  f44f607a          MOV      r0,#0xfa0
                  |L1.392|
;;;101    	if(CCR_Val2>Max_CCR_Val) CCR_Val2=Max_CCR_Val;
000188  f5b16f7a          CMP      r1,#0xfa0
00018c  dd01              BLE      |L1.402|
00018e  f44f617a          MOV      r1,#0xfa0
                  |L1.402|
;;;102    	if(CCR_Val3>Max_CCR_Val) CCR_Val3=Max_CCR_Val;
000192  f5b26f7a          CMP      r2,#0xfa0
000196  dd01              BLE      |L1.412|
000198  f44f627a          MOV      r2,#0xfa0
                  |L1.412|
;;;103    	if(CCR_Val4>Max_CCR_Val) CCR_Val4=Max_CCR_Val;
00019c  f5b36f7a          CMP      r3,#0xfa0
0001a0  dd01              BLE      |L1.422|
0001a2  f44f637a          MOV      r3,#0xfa0
                  |L1.422|
;;;104    	
;;;105    	if(CCR_Val1<Min_CCR_Val) CCR_Val1=Min_CCR_Val;
0001a6  f5b06ffa          CMP      r0,#0x7d0
0001aa  da01              BGE      |L1.432|
0001ac  f44f60fa          MOV      r0,#0x7d0
                  |L1.432|
;;;106    	if(CCR_Val2<Min_CCR_Val) CCR_Val2=Min_CCR_Val;
0001b0  f5b16ffa          CMP      r1,#0x7d0
0001b4  da01              BGE      |L1.442|
0001b6  f44f61fa          MOV      r1,#0x7d0
                  |L1.442|
;;;107    	if(CCR_Val3<Min_CCR_Val) CCR_Val3=Min_CCR_Val;
0001ba  f5b26ffa          CMP      r2,#0x7d0
0001be  da01              BGE      |L1.452|
0001c0  f44f62fa          MOV      r2,#0x7d0
                  |L1.452|
;;;108    	if(CCR_Val4<Min_CCR_Val) CCR_Val4=Min_CCR_Val;
0001c4  f5b36ffa          CMP      r3,#0x7d0
0001c8  da01              BGE      |L1.462|
0001ca  f44f63fa          MOV      r3,#0x7d0
                  |L1.462|
;;;109    	
;;;110    	TIM3->CCR1 = CCR_Val1;
0001ce  4d07              LDR      r5,|L1.492|
0001d0  3534              ADDS     r5,r5,#0x34
0001d2  8028              STRH     r0,[r5,#0]
;;;111    	TIM3->CCR2 = CCR_Val2;
0001d4  1d2d              ADDS     r5,r5,#4
0001d6  8029              STRH     r1,[r5,#0]
;;;112    	TIM3->CCR3 = CCR_Val3;
0001d8  1d2d              ADDS     r5,r5,#4
0001da  802a              STRH     r2,[r5,#0]
;;;113    	TIM3->CCR4 = CCR_Val4;
0001dc  1d2d              ADDS     r5,r5,#4
0001de  802b              STRH     r3,[r5,#0]
;;;114    }
0001e0  bd30              POP      {r4,r5,pc}
                          ENDP

0001e2  0000              DCW      0x0000
                  |L1.484|
                          DCD      0x40011000
                  |L1.488|
                          DCD      0x001a0c00
                  |L1.492|
                          DCD      0x40000400
                  |L1.496|
                          DCD      TIM_OCInitPWM

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  TIM_OCInitPWM
                          %        16
