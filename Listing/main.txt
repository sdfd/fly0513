; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o..\output\main.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\main.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\BSP -I..\CMSIS -I..\Lib\inc -I..\User -I"E:\Program files\keil-arm\ARM\RV31\INC" -I"E:\Program files\keil-arm\ARM\CMSIS\Include" -I"E:\Program files\keil-arm\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\output\main.crf ..\User\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Sys_Init PROC
;;;10     
;;;11     void Sys_Init()
000000  b510              PUSH     {r4,lr}
;;;12     {
;;;13     	NVIC_Configuration();	
000002  f7fffffe          BL       NVIC_Configuration
;;;14     	time_init();
000006  f7fffffe          BL       time_init
;;;15     	Spi1_Init();	
00000a  f7fffffe          BL       Spi1_Init
;;;16     	PWM_Init();
00000e  f7fffffe          BL       PWM_Init
;;;17     	motor_Init();	
000012  f7fffffe          BL       motor_Init
;;;18     	Nrf24l01_Init(4,40);
000016  2128              MOVS     r1,#0x28
000018  2004              MOVS     r0,#4
00001a  f7fffffe          BL       Nrf24l01_Init
;;;19     	Tim_Pwm_In_Init();
00001e  f7fffffe          BL       Tim_Pwm_In_Init
;;;20     	ADC1_Init();
000022  f7fffffe          BL       ADC1_Init
;;;21     	IMU_Init();
000026  f7fffffe          BL       IMU_Init
;;;22     	Led_Init();
00002a  f7fffffe          BL       Led_Init
;;;23     	Tim2_Init();
00002e  f7fffffe          BL       Tim2_Init
;;;24     	DMA_Usart1_Config();
000032  f7fffffe          BL       DMA_Usart1_Config
;;;25     	PID_ROL.P = 10;
000036  4843              LDR      r0,|L1.324|
000038  4943              LDR      r1,|L1.328|
00003a  6008              STR      r0,[r1,#0]  ; PID_ROL
;;;26     	PID_ROL.I = 3;
00003c  4843              LDR      r0,|L1.332|
00003e  6088              STR      r0,[r1,#8]  ; PID_ROL
;;;27     	PID_ROL.D = 5;	
000040  4843              LDR      r0,|L1.336|
000042  6108              STR      r0,[r1,#0x10]  ; PID_ROL
;;;28     	PID_PIT.P = 10;
000044  483f              LDR      r0,|L1.324|
000046  4943              LDR      r1,|L1.340|
000048  6008              STR      r0,[r1,#0]  ; PID_PIT
;;;29     	PID_PIT.I = 3;
00004a  4840              LDR      r0,|L1.332|
00004c  6088              STR      r0,[r1,#8]  ; PID_PIT
;;;30     	PID_PIT.D = 5;
00004e  4840              LDR      r0,|L1.336|
000050  6108              STR      r0,[r1,#0x10]  ; PID_PIT
;;;31     	PID_YAW.P = 0;
000052  2000              MOVS     r0,#0
000054  4940              LDR      r1,|L1.344|
000056  6008              STR      r0,[r1,#0]  ; PID_YAW
;;;32     	PID_YAW.I = 0;
000058  6088              STR      r0,[r1,#8]  ; PID_YAW
;;;33     	PID_YAW.D = 0;
00005a  6108              STR      r0,[r1,#0x10]  ; PID_YAW
;;;34     }
00005c  bd10              POP      {r4,pc}
;;;35     int main()
                          ENDP

                  main PROC
00005e  f7fffffe          BL       Sys_Init
;;;36     {
;;;37     	static u8 att_cnt=0;
;;;38     	static u8 rc_cnt=0;
;;;39     	static u8 status_cnt=0,dt_rc_cnt=0,dt_moto_cnt=0;
;;;40     	
;;;41     	Sys_Init();
;;;42     	if(Nrf24l01_Check() == SUCCESS)
000062  f7fffffe          BL       Nrf24l01_Check
000066  2801              CMP      r0,#1
000068  d103              BNE      |L1.114|
;;;43     		Led_Control(2,0);
00006a  2100              MOVS     r1,#0
00006c  2002              MOVS     r0,#2
00006e  f7fffffe          BL       Led_Control
                  |L1.114|
;;;44     	time_waitMs(100);
000072  2064              MOVS     r0,#0x64
000074  f7fffffe          BL       time_waitMs
;;;45     	while(1)
000078  e063              B        |L1.322|
                  |L1.122|
;;;46     	{
;;;47     		if(FLAG_ATT)
00007a  4838              LDR      r0,|L1.348|
00007c  7800              LDRB     r0,[r0,#0]  ; FLAG_ATT
00007e  2800              CMP      r0,#0
000080  d05f              BEQ      |L1.322|
;;;48     		{
;;;49     			FLAG_ATT = 0;
000082  2000              MOVS     r0,#0
000084  4935              LDR      r1,|L1.348|
000086  7008              STRB     r0,[r1,#0]
;;;50     			att_cnt++;
000088  4835              LDR      r0,|L1.352|
00008a  7800              LDRB     r0,[r0,#0]  ; att_cnt
00008c  1c40              ADDS     r0,r0,#1
00008e  4934              LDR      r1,|L1.352|
000090  7008              STRB     r0,[r1,#0]
;;;51     			rc_cnt++;
000092  4834              LDR      r0,|L1.356|
000094  7800              LDRB     r0,[r0,#0]  ; rc_cnt
000096  1c40              ADDS     r0,r0,#1
000098  4932              LDR      r1,|L1.356|
00009a  7008              STRB     r0,[r1,#0]
;;;52     			
;;;53     			if(rc_cnt==20)
00009c  4608              MOV      r0,r1
00009e  7800              LDRB     r0,[r0,#0]  ; rc_cnt
0000a0  2814              CMP      r0,#0x14
0000a2  d108              BNE      |L1.182|
;;;54     			{
;;;55     				rc_cnt = 0;
0000a4  2000              MOVS     r0,#0
0000a6  7008              STRB     r0,[r1,#0]
;;;56     				Rc_GetValue(&Rc_D);
0000a8  482f              LDR      r0,|L1.360|
0000aa  f7fffffe          BL       Rc_GetValue
;;;57     				Rc_Fun(&Rc_D,&Rc_C);
0000ae  492f              LDR      r1,|L1.364|
0000b0  482d              LDR      r0,|L1.360|
0000b2  f7fffffe          BL       Rc_Fun
                  |L1.182|
;;;58     			}
;;;59     			if(att_cnt==1);
0000b6  482a              LDR      r0,|L1.352|
0000b8  7800              LDRB     r0,[r0,#0]  ; att_cnt
0000ba  2801              CMP      r0,#1
0000bc  d041              BEQ      |L1.322|
;;;60     //				MPU6050_Dataanl(&mpu6050_dataacc1,&mpu6050_datagyr1);
;;;61     			else
;;;62     			{
;;;63     				att_cnt = 0;
0000be  2000              MOVS     r0,#0
0000c0  4927              LDR      r1,|L1.352|
0000c2  7008              STRB     r0,[r1,#0]
;;;64     				
;;;65     				Control(&Att_Angle,&Gyr,&Rc_D,Rc_C.ARMED);
0000c4  4829              LDR      r0,|L1.364|
0000c6  7803              LDRB     r3,[r0,#0]  ; Rc_C
0000c8  4a27              LDR      r2,|L1.360|
0000ca  4929              LDR      r1,|L1.368|
0000cc  4829              LDR      r0,|L1.372|
0000ce  f7fffffe          BL       Control
;;;66     				if(Rc_C.ARMED)
0000d2  4826              LDR      r0,|L1.364|
0000d4  7800              LDRB     r0,[r0,#0]  ; Rc_C
0000d6  b118              CBZ      r0,|L1.224|
;;;67     					Ledx_ONOFF(2);
0000d8  2002              MOVS     r0,#2
0000da  f7fffffe          BL       Ledx_ONOFF
0000de  e003              B        |L1.232|
                  |L1.224|
;;;68     				else
;;;69     					Led_Control(2,1);
0000e0  2101              MOVS     r1,#1
0000e2  2002              MOVS     r0,#2
0000e4  f7fffffe          BL       Led_Control
                  |L1.232|
;;;70     					
;;;71     				status_cnt++;
0000e8  4823              LDR      r0,|L1.376|
0000ea  7800              LDRB     r0,[r0,#0]  ; status_cnt
0000ec  1c40              ADDS     r0,r0,#1
0000ee  4922              LDR      r1,|L1.376|
0000f0  7008              STRB     r0,[r1,#0]
;;;72     				dt_rc_cnt++;
0000f2  4822              LDR      r0,|L1.380|
0000f4  7800              LDRB     r0,[r0,#0]  ; dt_rc_cnt
0000f6  1c40              ADDS     r0,r0,#1
0000f8  4920              LDR      r1,|L1.380|
0000fa  7008              STRB     r0,[r1,#0]
;;;73     				dt_moto_cnt++;
0000fc  4820              LDR      r0,|L1.384|
0000fe  7800              LDRB     r0,[r0,#0]  ; dt_moto_cnt
000100  1c40              ADDS     r0,r0,#1
000102  491f              LDR      r1,|L1.384|
000104  7008              STRB     r0,[r1,#0]
;;;74     		
;;;75     				if(status_cnt==1)
000106  481c              LDR      r0,|L1.376|
000108  7800              LDRB     r0,[r0,#0]  ; status_cnt
00010a  2801              CMP      r0,#1
00010c  d105              BNE      |L1.282|
;;;76     				{
;;;77     					status_cnt = 0;
00010e  2000              MOVS     r0,#0
000110  4919              LDR      r1,|L1.376|
000112  7008              STRB     r0,[r1,#0]
;;;78     					Send_Status = 1;
000114  2001              MOVS     r0,#1
000116  491b              LDR      r1,|L1.388|
000118  7008              STRB     r0,[r1,#0]
                  |L1.282|
;;;79     				}
;;;80     				if(dt_rc_cnt==2)
00011a  4818              LDR      r0,|L1.380|
00011c  7800              LDRB     r0,[r0,#0]  ; dt_rc_cnt
00011e  2802              CMP      r0,#2
000120  d105              BNE      |L1.302|
;;;81     				{
;;;82     					dt_rc_cnt=0;
000122  2000              MOVS     r0,#0
000124  4915              LDR      r1,|L1.380|
000126  7008              STRB     r0,[r1,#0]
;;;83     					Send_RCData = 1;
000128  2001              MOVS     r0,#1
00012a  4917              LDR      r1,|L1.392|
00012c  7008              STRB     r0,[r1,#0]
                  |L1.302|
;;;84     				}
;;;85     				if(dt_moto_cnt==3)
00012e  4814              LDR      r0,|L1.384|
000130  7800              LDRB     r0,[r0,#0]  ; dt_moto_cnt
000132  2803              CMP      r0,#3
000134  d105              BNE      |L1.322|
;;;86     				{
;;;87     					dt_moto_cnt=0;
000136  2000              MOVS     r0,#0
000138  4911              LDR      r1,|L1.384|
00013a  7008              STRB     r0,[r1,#0]
;;;88     					Send_MotoPwm = 1;
00013c  2001              MOVS     r0,#1
00013e  4913              LDR      r1,|L1.396|
000140  7008              STRB     r0,[r1,#0]
                  |L1.322|
000142  e79a              B        |L1.122|
;;;89     				}
;;;90     			}
;;;91     		}
;;;92     	}
;;;93     }
                          ENDP

                  |L1.324|
                          DCD      0x41200000
                  |L1.328|
                          DCD      PID_ROL
                  |L1.332|
                          DCD      0x40400000
                  |L1.336|
                          DCD      0x40a00000
                  |L1.340|
                          DCD      PID_PIT
                  |L1.344|
                          DCD      PID_YAW
                  |L1.348|
                          DCD      FLAG_ATT
                  |L1.352|
                          DCD      att_cnt
                  |L1.356|
                          DCD      rc_cnt
                  |L1.360|
                          DCD      Rc_D
                  |L1.364|
                          DCD      Rc_C
                  |L1.368|
                          DCD      Gyr
                  |L1.372|
                          DCD      Att_Angle
                  |L1.376|
                          DCD      status_cnt
                  |L1.380|
                          DCD      dt_rc_cnt
                  |L1.384|
                          DCD      dt_moto_cnt
                  |L1.388|
                          DCD      Send_Status
                  |L1.392|
                          DCD      Send_RCData
                  |L1.396|
                          DCD      Send_MotoPwm

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  Att_Angle
                          %        12

                          AREA ||.data||, DATA, ALIGN=2

                  FLAG_ATT
000000  00                DCB      0x00
                  att_cnt
000001  00                DCB      0x00
                  rc_cnt
000002  00                DCB      0x00
                  status_cnt
000003  00                DCB      0x00
                  dt_rc_cnt
000004  00                DCB      0x00
                  dt_moto_cnt
000005  00                DCB      0x00
                  Acc
000006  0000              DCB      0x00,0x00
                          DCD      0x00000000
                  Gyr
                          DCD      0x00000000
000010  0000              DCB      0x00,0x00
                  Acc_AVG
000012  0000              DCB      0x00,0x00
                          DCD      0x00000000
                  Alt
                          DCD      0x00000000
                  Rc_D
                          %        8
                  Rc_C
000024  00                DCB      0x00

                  __ARM_use_no_argv EQU 0
