; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o..\output\main.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\main.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\BSP -I..\CMSIS -I..\Lib\inc -I..\User -I"E:\Program Files\keil for arm4.7\ARM\RV31\INC" -I"E:\Program Files\keil for arm4.7\ARM\CMSIS\Include" -I"E:\Program Files\keil for arm4.7\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\output\main.crf ..\User\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Sys_Init PROC
;;;10     
;;;11     void Sys_Init()
000000  b510              PUSH     {r4,lr}
;;;12     {
;;;13     	NVIC_Configuration();	
000002  f7fffffe          BL       NVIC_Configuration
;;;14     	time_init();
000006  f7fffffe          BL       time_init
;;;15     	Spi1_Init();	
00000a  f7fffffe          BL       Spi1_Init
;;;16     	PWM_Init();
00000e  f7fffffe          BL       PWM_Init
;;;17     	motor_Init();	
000012  f7fffffe          BL       motor_Init
;;;18     	Nrf24l01_Init(4,40);
000016  2128              MOVS     r1,#0x28
000018  2004              MOVS     r0,#4
00001a  f7fffffe          BL       Nrf24l01_Init
;;;19     	Tim_Pwm_In_Init();
00001e  f7fffffe          BL       Tim_Pwm_In_Init
;;;20     	ADC1_Init();
000022  f7fffffe          BL       ADC1_Init
;;;21     	IMU_Init();
000026  f7fffffe          BL       IMU_Init
;;;22     	Led_Init();
00002a  f7fffffe          BL       Led_Init
;;;23     	Tim2_Init();
00002e  f7fffffe          BL       Tim2_Init
;;;24     	DMA_Usart1_Config();
000032  f7fffffe          BL       DMA_Usart1_Config
;;;25     	PID_ROL.P = 0;
000036  2000              MOVS     r0,#0
000038  4940              LDR      r1,|L1.316|
00003a  6008              STR      r0,[r1,#0]  ; PID_ROL
;;;26     	PID_ROL.I = 0;
00003c  6088              STR      r0,[r1,#8]  ; PID_ROL
;;;27     	PID_ROL.D = 0;	
00003e  6108              STR      r0,[r1,#0x10]  ; PID_ROL
;;;28     	PID_PIT.P = 30;
000040  483f              LDR      r0,|L1.320|
000042  4940              LDR      r1,|L1.324|
000044  6008              STR      r0,[r1,#0]  ; PID_PIT
;;;29     	PID_PIT.I = 0;
000046  2000              MOVS     r0,#0
000048  6088              STR      r0,[r1,#8]  ; PID_PIT
;;;30     	PID_PIT.D = 0;
00004a  6108              STR      r0,[r1,#0x10]  ; PID_PIT
;;;31     	PID_YAW.P = 0;
00004c  493e              LDR      r1,|L1.328|
00004e  6008              STR      r0,[r1,#0]  ; PID_YAW
;;;32     	PID_YAW.I = 0;
000050  6088              STR      r0,[r1,#8]  ; PID_YAW
;;;33     	PID_YAW.D = 0;
000052  6108              STR      r0,[r1,#0x10]  ; PID_YAW
;;;34     }
000054  bd10              POP      {r4,pc}
;;;35     int main()
                          ENDP

                  main PROC
000056  f7fffffe          BL       Sys_Init
;;;36     {
;;;37     	static u8 att_cnt=0;
;;;38     	static u8 rc_cnt=0;
;;;39     	static u8 status_cnt=0,dt_rc_cnt=0,dt_moto_cnt=0;
;;;40     	
;;;41     	Sys_Init();
;;;42     	if(Nrf24l01_Check() == SUCCESS)
00005a  f7fffffe          BL       Nrf24l01_Check
00005e  2801              CMP      r0,#1
000060  d103              BNE      |L1.106|
;;;43     		Led_Control(2,0);
000062  2100              MOVS     r1,#0
000064  2002              MOVS     r0,#2
000066  f7fffffe          BL       Led_Control
                  |L1.106|
;;;44     	time_waitMs(100);
00006a  2064              MOVS     r0,#0x64
00006c  f7fffffe          BL       time_waitMs
;;;45     	while(1)
000070  e063              B        |L1.314|
                  |L1.114|
;;;46     	{
;;;47     		if(FLAG_ATT)
000072  4836              LDR      r0,|L1.332|
000074  7800              LDRB     r0,[r0,#0]  ; FLAG_ATT
000076  2800              CMP      r0,#0
000078  d05f              BEQ      |L1.314|
;;;48     		{
;;;49     			FLAG_ATT = 0;
00007a  2000              MOVS     r0,#0
00007c  4933              LDR      r1,|L1.332|
00007e  7008              STRB     r0,[r1,#0]
;;;50     			att_cnt++;
000080  4833              LDR      r0,|L1.336|
000082  7800              LDRB     r0,[r0,#0]  ; att_cnt
000084  1c40              ADDS     r0,r0,#1
000086  4932              LDR      r1,|L1.336|
000088  7008              STRB     r0,[r1,#0]
;;;51     			rc_cnt++;
00008a  4832              LDR      r0,|L1.340|
00008c  7800              LDRB     r0,[r0,#0]  ; rc_cnt
00008e  1c40              ADDS     r0,r0,#1
000090  4930              LDR      r1,|L1.340|
000092  7008              STRB     r0,[r1,#0]
;;;52     			
;;;53     			if(rc_cnt==20)
000094  4608              MOV      r0,r1
000096  7800              LDRB     r0,[r0,#0]  ; rc_cnt
000098  2814              CMP      r0,#0x14
00009a  d108              BNE      |L1.174|
;;;54     			{
;;;55     				rc_cnt = 0;
00009c  2000              MOVS     r0,#0
00009e  7008              STRB     r0,[r1,#0]
;;;56     				Rc_GetValue(&Rc_D);
0000a0  482d              LDR      r0,|L1.344|
0000a2  f7fffffe          BL       Rc_GetValue
;;;57     				Rc_Fun(&Rc_D,&Rc_C);
0000a6  492d              LDR      r1,|L1.348|
0000a8  482b              LDR      r0,|L1.344|
0000aa  f7fffffe          BL       Rc_Fun
                  |L1.174|
;;;58     			}
;;;59     			if(att_cnt==1);
0000ae  4828              LDR      r0,|L1.336|
0000b0  7800              LDRB     r0,[r0,#0]  ; att_cnt
0000b2  2801              CMP      r0,#1
0000b4  d041              BEQ      |L1.314|
;;;60     //				MPU6050_Dataanl(&mpu6050_dataacc1,&mpu6050_datagyr1);
;;;61     			else
;;;62     			{
;;;63     				att_cnt = 0;
0000b6  2000              MOVS     r0,#0
0000b8  4925              LDR      r1,|L1.336|
0000ba  7008              STRB     r0,[r1,#0]
;;;64     				
;;;65     				Control(&Att_Angle,&Gyr,&Rc_D,Rc_C.ARMED);
0000bc  4827              LDR      r0,|L1.348|
0000be  7803              LDRB     r3,[r0,#0]  ; Rc_C
0000c0  4a25              LDR      r2,|L1.344|
0000c2  4927              LDR      r1,|L1.352|
0000c4  4827              LDR      r0,|L1.356|
0000c6  f7fffffe          BL       Control
;;;66     				if(Rc_C.ARMED)
0000ca  4824              LDR      r0,|L1.348|
0000cc  7800              LDRB     r0,[r0,#0]  ; Rc_C
0000ce  b118              CBZ      r0,|L1.216|
;;;67     					Ledx_ONOFF(2);
0000d0  2002              MOVS     r0,#2
0000d2  f7fffffe          BL       Ledx_ONOFF
0000d6  e003              B        |L1.224|
                  |L1.216|
;;;68     				else
;;;69     					Led_Control(2,1);
0000d8  2101              MOVS     r1,#1
0000da  2002              MOVS     r0,#2
0000dc  f7fffffe          BL       Led_Control
                  |L1.224|
;;;70     					
;;;71     				status_cnt++;
0000e0  4821              LDR      r0,|L1.360|
0000e2  7800              LDRB     r0,[r0,#0]  ; status_cnt
0000e4  1c40              ADDS     r0,r0,#1
0000e6  4920              LDR      r1,|L1.360|
0000e8  7008              STRB     r0,[r1,#0]
;;;72     				dt_rc_cnt++;
0000ea  4820              LDR      r0,|L1.364|
0000ec  7800              LDRB     r0,[r0,#0]  ; dt_rc_cnt
0000ee  1c40              ADDS     r0,r0,#1
0000f0  491e              LDR      r1,|L1.364|
0000f2  7008              STRB     r0,[r1,#0]
;;;73     				dt_moto_cnt++;
0000f4  481e              LDR      r0,|L1.368|
0000f6  7800              LDRB     r0,[r0,#0]  ; dt_moto_cnt
0000f8  1c40              ADDS     r0,r0,#1
0000fa  491d              LDR      r1,|L1.368|
0000fc  7008              STRB     r0,[r1,#0]
;;;74     		
;;;75     				if(status_cnt==1)
0000fe  481a              LDR      r0,|L1.360|
000100  7800              LDRB     r0,[r0,#0]  ; status_cnt
000102  2801              CMP      r0,#1
000104  d105              BNE      |L1.274|
;;;76     				{
;;;77     					status_cnt = 0;
000106  2000              MOVS     r0,#0
000108  4917              LDR      r1,|L1.360|
00010a  7008              STRB     r0,[r1,#0]
;;;78     					Send_Status = 1;
00010c  2001              MOVS     r0,#1
00010e  4919              LDR      r1,|L1.372|
000110  7008              STRB     r0,[r1,#0]
                  |L1.274|
;;;79     				}
;;;80     				if(dt_rc_cnt==2)
000112  4816              LDR      r0,|L1.364|
000114  7800              LDRB     r0,[r0,#0]  ; dt_rc_cnt
000116  2802              CMP      r0,#2
000118  d105              BNE      |L1.294|
;;;81     				{
;;;82     					dt_rc_cnt=0;
00011a  2000              MOVS     r0,#0
00011c  4913              LDR      r1,|L1.364|
00011e  7008              STRB     r0,[r1,#0]
;;;83     					Send_RCData = 1;
000120  2001              MOVS     r0,#1
000122  4915              LDR      r1,|L1.376|
000124  7008              STRB     r0,[r1,#0]
                  |L1.294|
;;;84     				}
;;;85     				if(dt_moto_cnt==3)
000126  4812              LDR      r0,|L1.368|
000128  7800              LDRB     r0,[r0,#0]  ; dt_moto_cnt
00012a  2803              CMP      r0,#3
00012c  d105              BNE      |L1.314|
;;;86     				{
;;;87     					dt_moto_cnt=0;
00012e  2000              MOVS     r0,#0
000130  490f              LDR      r1,|L1.368|
000132  7008              STRB     r0,[r1,#0]
;;;88     					Send_MotoPwm = 1;
000134  2001              MOVS     r0,#1
000136  4911              LDR      r1,|L1.380|
000138  7008              STRB     r0,[r1,#0]
                  |L1.314|
00013a  e79a              B        |L1.114|
;;;89     				}
;;;90     			}
;;;91     		}
;;;92     	}
;;;93     }
                          ENDP

                  |L1.316|
                          DCD      PID_ROL
                  |L1.320|
                          DCD      0x41f00000
                  |L1.324|
                          DCD      PID_PIT
                  |L1.328|
                          DCD      PID_YAW
                  |L1.332|
                          DCD      FLAG_ATT
                  |L1.336|
                          DCD      att_cnt
                  |L1.340|
                          DCD      rc_cnt
                  |L1.344|
                          DCD      Rc_D
                  |L1.348|
                          DCD      Rc_C
                  |L1.352|
                          DCD      Gyr
                  |L1.356|
                          DCD      Att_Angle
                  |L1.360|
                          DCD      status_cnt
                  |L1.364|
                          DCD      dt_rc_cnt
                  |L1.368|
                          DCD      dt_moto_cnt
                  |L1.372|
                          DCD      Send_Status
                  |L1.376|
                          DCD      Send_RCData
                  |L1.380|
                          DCD      Send_MotoPwm

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  Att_Angle
                          %        12

                          AREA ||.data||, DATA, ALIGN=2

                  FLAG_ATT
000000  00                DCB      0x00
                  att_cnt
000001  00                DCB      0x00
                  rc_cnt
000002  00                DCB      0x00
                  status_cnt
000003  00                DCB      0x00
                  dt_rc_cnt
000004  00                DCB      0x00
                  dt_moto_cnt
000005  00                DCB      0x00
                  Acc
000006  0000              DCB      0x00,0x00
                          DCD      0x00000000
                  Gyr
                          DCD      0x00000000
000010  0000              DCB      0x00,0x00
                  Acc_AVG
000012  0000              DCB      0x00,0x00
                          DCD      0x00000000
                  Alt
                          DCD      0x00000000
                  Rc_D
                          %        8
                  Rc_C
000024  00                DCB      0x00

                  __ARM_use_no_argv EQU 0
