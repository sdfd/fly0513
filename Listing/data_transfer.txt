; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o..\output\data_transfer.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\data_transfer.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\BSP -I..\CMSIS -I..\Lib\inc -I..\User -I"E:\Program files\keil-arm\ARM\RV31\INC" -I"E:\Program files\keil-arm\ARM\CMSIS\Include" -I"E:\Program files\keil-arm\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\output\data_transfer.crf ..\User\Data_Transfer.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Data_Receive_Anl PROC
;;;47     }
;;;48     void Data_Receive_Anl(u8 *data_buf,u8 num)
000000  4770              BX       lr
;;;49     {
;;;50     	
;;;51     }
;;;52     u8 Nrf_Get_FIFOSta(void)
                          ENDP

                  Nrf_Check_Event PROC
;;;9      u8 data_to_send[50];
;;;10     void Nrf_Check_Event(void)
000002  b570              PUSH     {r4-r6,lr}
;;;11     {
;;;12     	u8 sta = NRF_Read_Reg(NRF_READ_REG + NRFRegSTATUS);
000004  2007              MOVS     r0,#7
000006  f7fffffe          BL       NRF_Read_Reg
00000a  4604              MOV      r4,r0
;;;13     	////////////////////////////////////////////////////////////////
;;;14     	////////////////////////////////////////////////////////////////
;;;15     	if(sta & (1<<RX_DR))
00000c  f0140f40          TST      r4,#0x40
000010  d014              BEQ      |L1.60|
;;;16     	{
;;;17     		u8 rx_len = NRF_Read_Reg(R_RX_PL_WID);
000012  2060              MOVS     r0,#0x60
000014  f7fffffe          BL       NRF_Read_Reg
000018  4605              MOV      r5,r0
;;;18     		if(rx_len<33)
00001a  2d21              CMP      r5,#0x21
00001c  da09              BGE      |L1.50|
;;;19     		{
;;;20     			NRF_Read_Buf(RD_RX_PLOAD,NRF24L01_RXDATA,rx_len);// read receive payload from RX_FIFO buffer
00001e  462a              MOV      r2,r5
000020  49fe              LDR      r1,|L1.1052|
000022  2061              MOVS     r0,#0x61
000024  f7fffffe          BL       NRF_Read_Buf
;;;21     			//LED1_ONOFF();
;;;22     			Data_Receive_Anl(NRF24L01_RXDATA,rx_len);
000028  4629              MOV      r1,r5
00002a  48fc              LDR      r0,|L1.1052|
00002c  f7fffffe          BL       Data_Receive_Anl
000030  e003              B        |L1.58|
                  |L1.50|
;;;23     		}
;;;24     		else 
;;;25     		{
;;;26     			NRF_Write_Reg(FLUSH_RX,0xff);//Çå¿Õ»º³åÇø
000032  21ff              MOVS     r1,#0xff
000034  20e2              MOVS     r0,#0xe2
000036  f7fffffe          BL       NRF_Write_Reg
                  |L1.58|
;;;27     		}
;;;28     	}
00003a  bf00              NOP      
                  |L1.60|
;;;29     	////////////////////////////////////////////////////////////////
;;;30     	////////////////////////////////////////////////////////////////
;;;31     	if(sta & (1<<TX_DS))
00003c  f0140f20          TST      r4,#0x20
000040  d002              BEQ      |L1.72|
;;;32     	{
;;;33     		Ledx_ONOFF(1);
000042  2001              MOVS     r0,#1
000044  f7fffffe          BL       Ledx_ONOFF
                  |L1.72|
;;;34     	}
;;;35     	////////////////////////////////////////////////////////////////
;;;36     	////////////////////////////////////////////////////////////////
;;;37     	if(sta & (1<<MAX_RT))
000048  f0140f10          TST      r4,#0x10
00004c  d003              BEQ      |L1.86|
;;;38     	{
;;;39     		if(1)//sta & 0x01)	//TX FIFO FULL
;;;40     		{
;;;41     			NRF_Write_Reg(FLUSH_TX,0);
00004e  2100              MOVS     r1,#0
000050  20e1              MOVS     r0,#0xe1
000052  f7fffffe          BL       NRF_Write_Reg
                  |L1.86|
;;;42     		}
;;;43     	}
;;;44     	////////////////////////////////////////////////////////////////
;;;45     	////////////////////////////////////////////////////////////////
;;;46     	NRF_Write_Reg(NRF_WRITE_REG + NRFRegSTATUS, sta);
000056  4621              MOV      r1,r4
000058  2027              MOVS     r0,#0x27
00005a  f7fffffe          BL       NRF_Write_Reg
;;;47     }
00005e  bd70              POP      {r4-r6,pc}
;;;48     void Data_Receive_Anl(u8 *data_buf,u8 num)
                          ENDP

                  Nrf_Get_FIFOSta PROC
;;;51     }
;;;52     u8 Nrf_Get_FIFOSta(void)
000060  b510              PUSH     {r4,lr}
;;;53     {
;;;54     	return NRF_Read_Reg(NRF_READ_REG + FIFO_STATUS);
000062  2017              MOVS     r0,#0x17
000064  f7fffffe          BL       NRF_Read_Reg
;;;55     }
000068  bd10              POP      {r4,pc}
;;;56     void Data_Exchange(void)
                          ENDP

                  Data_Send_MotoPWM PROC
;;;156    }
;;;157    void Data_Send_MotoPWM(void)
00006a  b570              PUSH     {r4-r6,lr}
;;;158    {
;;;159    	u8 _cnt=0;
00006c  2400              MOVS     r4,#0
;;;160    	data_to_send[_cnt++]=0xAA;
00006e  22aa              MOVS     r2,#0xaa
000070  4621              MOV      r1,r4
000072  1c64              ADDS     r4,r4,#1
000074  48ea              LDR      r0,|L1.1056|
000076  5442              STRB     r2,[r0,r1]
;;;161    	data_to_send[_cnt++]=0xAA;
000078  4621              MOV      r1,r4
00007a  1c64              ADDS     r4,r4,#1
00007c  5442              STRB     r2,[r0,r1]
;;;162    	data_to_send[_cnt++]=0x06;
00007e  2206              MOVS     r2,#6
000080  4621              MOV      r1,r4
000082  1c64              ADDS     r4,r4,#1
000084  5442              STRB     r2,[r0,r1]
;;;163    	data_to_send[_cnt++]=0;
000086  2200              MOVS     r2,#0
000088  4621              MOV      r1,r4
00008a  1c64              ADDS     r4,r4,#1
00008c  5442              STRB     r2,[r0,r1]
;;;164    	data_to_send[_cnt++]=BYTE1(Moto_PWM_1);
00008e  48e5              LDR      r0,|L1.1060|
000090  7842              LDRB     r2,[r0,#1]  ; Moto_PWM_1
000092  4621              MOV      r1,r4
000094  1c64              ADDS     r4,r4,#1
000096  48e2              LDR      r0,|L1.1056|
000098  5442              STRB     r2,[r0,r1]
;;;165    	data_to_send[_cnt++]=BYTE0(Moto_PWM_1);
00009a  48e2              LDR      r0,|L1.1060|
00009c  7802              LDRB     r2,[r0,#0]  ; Moto_PWM_1
00009e  4621              MOV      r1,r4
0000a0  1c64              ADDS     r4,r4,#1
0000a2  48df              LDR      r0,|L1.1056|
0000a4  5442              STRB     r2,[r0,r1]
;;;166    	data_to_send[_cnt++]=BYTE1(Moto_PWM_2);
0000a6  48e0              LDR      r0,|L1.1064|
0000a8  7842              LDRB     r2,[r0,#1]  ; Moto_PWM_2
0000aa  4621              MOV      r1,r4
0000ac  1c64              ADDS     r4,r4,#1
0000ae  48dc              LDR      r0,|L1.1056|
0000b0  5442              STRB     r2,[r0,r1]
;;;167    	data_to_send[_cnt++]=BYTE0(Moto_PWM_2);
0000b2  48dd              LDR      r0,|L1.1064|
0000b4  7802              LDRB     r2,[r0,#0]  ; Moto_PWM_2
0000b6  4621              MOV      r1,r4
0000b8  1c60              ADDS     r0,r4,#1
0000ba  b2c4              UXTB     r4,r0
0000bc  48d8              LDR      r0,|L1.1056|
0000be  5442              STRB     r2,[r0,r1]
;;;168    	data_to_send[_cnt++]=BYTE1(Moto_PWM_3);
0000c0  48da              LDR      r0,|L1.1068|
0000c2  7842              LDRB     r2,[r0,#1]  ; Moto_PWM_3
0000c4  4620              MOV      r0,r4
0000c6  1c61              ADDS     r1,r4,#1
0000c8  b2cc              UXTB     r4,r1
0000ca  49d5              LDR      r1,|L1.1056|
0000cc  540a              STRB     r2,[r1,r0]
;;;169    	data_to_send[_cnt++]=BYTE0(Moto_PWM_3);
0000ce  48d7              LDR      r0,|L1.1068|
0000d0  7802              LDRB     r2,[r0,#0]  ; Moto_PWM_3
0000d2  4620              MOV      r0,r4
0000d4  1c61              ADDS     r1,r4,#1
0000d6  b2cc              UXTB     r4,r1
0000d8  49d1              LDR      r1,|L1.1056|
0000da  540a              STRB     r2,[r1,r0]
;;;170    	data_to_send[_cnt++]=BYTE1(Moto_PWM_4);
0000dc  48d4              LDR      r0,|L1.1072|
0000de  7842              LDRB     r2,[r0,#1]  ; Moto_PWM_4
0000e0  4620              MOV      r0,r4
0000e2  1c61              ADDS     r1,r4,#1
0000e4  b2cc              UXTB     r4,r1
0000e6  49ce              LDR      r1,|L1.1056|
0000e8  540a              STRB     r2,[r1,r0]
;;;171    	data_to_send[_cnt++]=BYTE0(Moto_PWM_4);
0000ea  48d1              LDR      r0,|L1.1072|
0000ec  7802              LDRB     r2,[r0,#0]  ; Moto_PWM_4
0000ee  4620              MOV      r0,r4
0000f0  1c61              ADDS     r1,r4,#1
0000f2  b2cc              UXTB     r4,r1
0000f4  49ca              LDR      r1,|L1.1056|
0000f6  540a              STRB     r2,[r1,r0]
;;;172    	
;;;173    	data_to_send[3] = _cnt-4;
0000f8  1f20              SUBS     r0,r4,#4
0000fa  70c8              STRB     r0,[r1,#3]
;;;174    	
;;;175    	u8 sum = 0;
0000fc  2500              MOVS     r5,#0
;;;176    	for(u8 i=0;i<_cnt;i++)
0000fe  2000              MOVS     r0,#0
000100  e005              B        |L1.270|
                  |L1.258|
;;;177    		sum += data_to_send[i];
000102  49c7              LDR      r1,|L1.1056|
000104  5c09              LDRB     r1,[r1,r0]
000106  4429              ADD      r1,r1,r5
000108  b2cd              UXTB     r5,r1
00010a  1c41              ADDS     r1,r0,#1              ;176
00010c  b2c8              UXTB     r0,r1                 ;176
                  |L1.270|
00010e  42a0              CMP      r0,r4                 ;176
000110  dbf7              BLT      |L1.258|
;;;178    	
;;;179    	data_to_send[_cnt++]=sum;
000112  4620              MOV      r0,r4
000114  1c61              ADDS     r1,r4,#1
000116  b2cc              UXTB     r4,r1
000118  49c1              LDR      r1,|L1.1056|
00011a  540d              STRB     r5,[r1,r0]
;;;180    	
;;;181    #ifdef DATA_TRANSFER_USE_USART
;;;182    	Uart1_Put_Buf(data_to_send,_cnt);
;;;183    #else
;;;184    	NRF_TxPacket(data_to_send,_cnt);
00011c  4621              MOV      r1,r4
00011e  48c0              LDR      r0,|L1.1056|
000120  f7fffffe          BL       NRF_TxPacket
;;;185    #endif
;;;186    }
000124  bd70              POP      {r4-r6,pc}
;;;187    void Data_Send_VOTAGE(void)
                          ENDP

                  Data_Send_RCData PROC
;;;125    }
;;;126    void Data_Send_RCData(void)
000126  b570              PUSH     {r4-r6,lr}
;;;127    {
;;;128    	u8 _cnt=0;
000128  2400              MOVS     r4,#0
;;;129    	data_to_send[_cnt++]=0xAA;
00012a  22aa              MOVS     r2,#0xaa
00012c  4621              MOV      r1,r4
00012e  1c64              ADDS     r4,r4,#1
000130  48bb              LDR      r0,|L1.1056|
000132  5442              STRB     r2,[r0,r1]
;;;130    	data_to_send[_cnt++]=0xAA;
000134  4621              MOV      r1,r4
000136  1c64              ADDS     r4,r4,#1
000138  5442              STRB     r2,[r0,r1]
;;;131    	data_to_send[_cnt++]=0x03;
00013a  2203              MOVS     r2,#3
00013c  4621              MOV      r1,r4
00013e  1c64              ADDS     r4,r4,#1
000140  5442              STRB     r2,[r0,r1]
;;;132    	data_to_send[_cnt++]=0;
000142  2200              MOVS     r2,#0
000144  4621              MOV      r1,r4
000146  1c64              ADDS     r4,r4,#1
000148  5442              STRB     r2,[r0,r1]
;;;133    	data_to_send[_cnt++]=BYTE1(Rc_D.THROTTLE);
00014a  48ba              LDR      r0,|L1.1076|
00014c  7942              LDRB     r2,[r0,#5]
00014e  4621              MOV      r1,r4
000150  1c64              ADDS     r4,r4,#1
000152  48b3              LDR      r0,|L1.1056|
000154  5442              STRB     r2,[r0,r1]
;;;134    	data_to_send[_cnt++]=BYTE0(Rc_D.THROTTLE);
000156  48b7              LDR      r0,|L1.1076|
000158  7902              LDRB     r2,[r0,#4]  ; Rc_D
00015a  4621              MOV      r1,r4
00015c  1c64              ADDS     r4,r4,#1
00015e  48b0              LDR      r0,|L1.1056|
000160  5442              STRB     r2,[r0,r1]
;;;135    	data_to_send[_cnt++]=BYTE1(Rc_D.YAW);
000162  48b4              LDR      r0,|L1.1076|
000164  79c2              LDRB     r2,[r0,#7]
000166  4621              MOV      r1,r4
000168  1c64              ADDS     r4,r4,#1
00016a  48ad              LDR      r0,|L1.1056|
00016c  5442              STRB     r2,[r0,r1]
;;;136    	data_to_send[_cnt++]=BYTE0(Rc_D.YAW);
00016e  48b1              LDR      r0,|L1.1076|
000170  7982              LDRB     r2,[r0,#6]  ; Rc_D
000172  4620              MOV      r0,r4
000174  1c61              ADDS     r1,r4,#1
000176  b2cc              UXTB     r4,r1
000178  49a9              LDR      r1,|L1.1056|
00017a  540a              STRB     r2,[r1,r0]
;;;137    	data_to_send[_cnt++]=BYTE1(Rc_D.ROLL);
00017c  48ad              LDR      r0,|L1.1076|
00017e  7842              LDRB     r2,[r0,#1]  ; Rc_D
000180  4620              MOV      r0,r4
000182  1c61              ADDS     r1,r4,#1
000184  b2cc              UXTB     r4,r1
000186  49a6              LDR      r1,|L1.1056|
000188  540a              STRB     r2,[r1,r0]
;;;138    	data_to_send[_cnt++]=BYTE0(Rc_D.ROLL);
00018a  48aa              LDR      r0,|L1.1076|
00018c  7802              LDRB     r2,[r0,#0]  ; Rc_D
00018e  4620              MOV      r0,r4
000190  1c61              ADDS     r1,r4,#1
000192  b2cc              UXTB     r4,r1
000194  49a2              LDR      r1,|L1.1056|
000196  540a              STRB     r2,[r1,r0]
;;;139    	data_to_send[_cnt++]=BYTE1(Rc_D.PITCH);
000198  48a6              LDR      r0,|L1.1076|
00019a  78c2              LDRB     r2,[r0,#3]
00019c  4620              MOV      r0,r4
00019e  1c61              ADDS     r1,r4,#1
0001a0  b2cc              UXTB     r4,r1
0001a2  499f              LDR      r1,|L1.1056|
0001a4  540a              STRB     r2,[r1,r0]
;;;140    	data_to_send[_cnt++]=BYTE0(Rc_D.PITCH);
0001a6  48a3              LDR      r0,|L1.1076|
0001a8  7882              LDRB     r2,[r0,#2]  ; Rc_D
0001aa  4620              MOV      r0,r4
0001ac  1c61              ADDS     r1,r4,#1
0001ae  b2cc              UXTB     r4,r1
0001b0  499b              LDR      r1,|L1.1056|
0001b2  540a              STRB     r2,[r1,r0]
;;;141    
;;;142    	
;;;143    	data_to_send[3] = _cnt-4;
0001b4  1f20              SUBS     r0,r4,#4
0001b6  70c8              STRB     r0,[r1,#3]
;;;144    	
;;;145    	u8 sum = 0;
0001b8  2500              MOVS     r5,#0
;;;146    	for(u8 i=0;i<_cnt;i++)
0001ba  2000              MOVS     r0,#0
0001bc  e005              B        |L1.458|
                  |L1.446|
;;;147    		sum += data_to_send[i];
0001be  4998              LDR      r1,|L1.1056|
0001c0  5c09              LDRB     r1,[r1,r0]
0001c2  4429              ADD      r1,r1,r5
0001c4  b2cd              UXTB     r5,r1
0001c6  1c41              ADDS     r1,r0,#1              ;146
0001c8  b2c8              UXTB     r0,r1                 ;146
                  |L1.458|
0001ca  42a0              CMP      r0,r4                 ;146
0001cc  dbf7              BLT      |L1.446|
;;;148    	
;;;149    	data_to_send[_cnt++]=sum;
0001ce  4620              MOV      r0,r4
0001d0  1c61              ADDS     r1,r4,#1
0001d2  b2cc              UXTB     r4,r1
0001d4  4992              LDR      r1,|L1.1056|
0001d6  540d              STRB     r5,[r1,r0]
;;;150    	
;;;151    #ifdef DATA_TRANSFER_USE_USART
;;;152    	Uart1_Put_Buf(data_to_send,_cnt);
;;;153    #else
;;;154    	NRF_TxPacket(data_to_send,_cnt);
0001d8  4621              MOV      r1,r4
0001da  4891              LDR      r0,|L1.1056|
0001dc  f7fffffe          BL       NRF_TxPacket
;;;155    #endif
;;;156    }
0001e0  bd70              POP      {r4-r6,pc}
;;;157    void Data_Send_MotoPWM(void)
                          ENDP

                  Data_Send_Status PROC
;;;82     }
;;;83     void Data_Send_Status(void)
0001e2  b57c              PUSH     {r2-r6,lr}
;;;84     {
;;;85     	u8 _cnt=0;
0001e4  2400              MOVS     r4,#0
;;;86     	data_to_send[_cnt++]=0xAA;
0001e6  22aa              MOVS     r2,#0xaa
0001e8  4621              MOV      r1,r4
0001ea  1c64              ADDS     r4,r4,#1
0001ec  488c              LDR      r0,|L1.1056|
0001ee  5442              STRB     r2,[r0,r1]
;;;87     	data_to_send[_cnt++]=0xAA;
0001f0  4621              MOV      r1,r4
0001f2  1c64              ADDS     r4,r4,#1
0001f4  5442              STRB     r2,[r0,r1]
;;;88     	data_to_send[_cnt++]=0x01;
0001f6  2201              MOVS     r2,#1
0001f8  4621              MOV      r1,r4
0001fa  1c64              ADDS     r4,r4,#1
0001fc  5442              STRB     r2,[r0,r1]
;;;89     	data_to_send[_cnt++]=0;
0001fe  2200              MOVS     r2,#0
000200  4621              MOV      r1,r4
000202  1c64              ADDS     r4,r4,#1
000204  5442              STRB     r2,[r0,r1]
;;;90     	vs16 _temp;
;;;91     	_temp = (int)(Att_Angle.rol*100);
000206  498c              LDR      r1,|L1.1080|
000208  6808              LDR      r0,[r1,#0]  ; Att_Angle
00020a  498c              LDR      r1,|L1.1084|
00020c  f7fffffe          BL       __aeabi_fmul
000210  4606              MOV      r6,r0
000212  f7fffffe          BL       __aeabi_f2iz
000216  b200              SXTH     r0,r0
000218  9001              STR      r0,[sp,#4]
;;;92     	data_to_send[_cnt++]=BYTE1(_temp);
00021a  f89d2005          LDRB     r2,[sp,#5]
00021e  4621              MOV      r1,r4
000220  1c64              ADDS     r4,r4,#1
000222  487f              LDR      r0,|L1.1056|
000224  5442              STRB     r2,[r0,r1]
;;;93     	data_to_send[_cnt++]=BYTE0(_temp);
000226  f89d2004          LDRB     r2,[sp,#4]
00022a  4621              MOV      r1,r4
00022c  1c64              ADDS     r4,r4,#1
00022e  5442              STRB     r2,[r0,r1]
;;;94     	_temp = (int)(Att_Angle.pit*100);
000230  4981              LDR      r1,|L1.1080|
000232  6848              LDR      r0,[r1,#4]  ; Att_Angle
000234  4981              LDR      r1,|L1.1084|
000236  f7fffffe          BL       __aeabi_fmul
00023a  4606              MOV      r6,r0
00023c  f7fffffe          BL       __aeabi_f2iz
000240  b200              SXTH     r0,r0
000242  9001              STR      r0,[sp,#4]
;;;95     	data_to_send[_cnt++]=BYTE1(_temp);
000244  f89d2005          LDRB     r2,[sp,#5]
000248  4621              MOV      r1,r4
00024a  1c64              ADDS     r4,r4,#1
00024c  4874              LDR      r0,|L1.1056|
00024e  5442              STRB     r2,[r0,r1]
;;;96     	data_to_send[_cnt++]=BYTE0(_temp);
000250  f89d2004          LDRB     r2,[sp,#4]
000254  4620              MOV      r0,r4
000256  1c61              ADDS     r1,r4,#1
000258  b2cc              UXTB     r4,r1
00025a  4971              LDR      r1,|L1.1056|
00025c  540a              STRB     r2,[r1,r0]
;;;97     	_temp = (int)(Att_Angle.yaw*100);
00025e  4976              LDR      r1,|L1.1080|
000260  6888              LDR      r0,[r1,#8]  ; Att_Angle
000262  4976              LDR      r1,|L1.1084|
000264  f7fffffe          BL       __aeabi_fmul
000268  4606              MOV      r6,r0
00026a  f7fffffe          BL       __aeabi_f2iz
00026e  b200              SXTH     r0,r0
000270  9001              STR      r0,[sp,#4]
;;;98     	//_temp = (int)(Mag_Heading*100);
;;;99     	data_to_send[_cnt++]=BYTE1(_temp);
000272  f89d2005          LDRB     r2,[sp,#5]
000276  4620              MOV      r0,r4
000278  1c61              ADDS     r1,r4,#1
00027a  b2cc              UXTB     r4,r1
00027c  4968              LDR      r1,|L1.1056|
00027e  540a              STRB     r2,[r1,r0]
;;;100    	data_to_send[_cnt++]=BYTE0(_temp);
000280  f89d2004          LDRB     r2,[sp,#4]
000284  4620              MOV      r0,r4
000286  1c61              ADDS     r1,r4,#1
000288  b2cc              UXTB     r4,r1
00028a  4965              LDR      r1,|L1.1056|
00028c  540a              STRB     r2,[r1,r0]
;;;101    	vs32 _temp2 = Alt;
00028e  486c              LDR      r0,|L1.1088|
000290  6800              LDR      r0,[r0,#0]  ; Alt
000292  9000              STR      r0,[sp,#0]
;;;102    	data_to_send[_cnt++]=BYTE3(_temp2);
000294  f89d2003          LDRB     r2,[sp,#3]
000298  4620              MOV      r0,r4
00029a  1c61              ADDS     r1,r4,#1
00029c  b2cc              UXTB     r4,r1
00029e  4960              LDR      r1,|L1.1056|
0002a0  540a              STRB     r2,[r1,r0]
;;;103    	data_to_send[_cnt++]=BYTE2(_temp2);
0002a2  f89d2002          LDRB     r2,[sp,#2]
0002a6  4620              MOV      r0,r4
0002a8  1c61              ADDS     r1,r4,#1
0002aa  b2cc              UXTB     r4,r1
0002ac  495c              LDR      r1,|L1.1056|
0002ae  540a              STRB     r2,[r1,r0]
;;;104    	data_to_send[_cnt++]=BYTE1(_temp2);
0002b0  f89d2001          LDRB     r2,[sp,#1]
0002b4  4620              MOV      r0,r4
0002b6  1c61              ADDS     r1,r4,#1
0002b8  b2cc              UXTB     r4,r1
0002ba  4959              LDR      r1,|L1.1056|
0002bc  540a              STRB     r2,[r1,r0]
;;;105    	data_to_send[_cnt++]=BYTE0(_temp2);
0002be  f89d2000          LDRB     r2,[sp,#0]
0002c2  4620              MOV      r0,r4
0002c4  1c61              ADDS     r1,r4,#1
0002c6  b2cc              UXTB     r4,r1
0002c8  4955              LDR      r1,|L1.1056|
0002ca  540a              STRB     r2,[r1,r0]
;;;106    		
;;;107    	if(Rc_C.ARMED==0)			data_to_send[_cnt++]=0xA0;	//Ëø¶¨
0002cc  485d              LDR      r0,|L1.1092|
0002ce  7800              LDRB     r0,[r0,#0]  ; Rc_C
0002d0  b930              CBNZ     r0,|L1.736|
0002d2  22a0              MOVS     r2,#0xa0
0002d4  4620              MOV      r0,r4
0002d6  1c61              ADDS     r1,r4,#1
0002d8  b2cc              UXTB     r4,r1
0002da  4951              LDR      r1,|L1.1056|
0002dc  540a              STRB     r2,[r1,r0]
0002de  e009              B        |L1.756|
                  |L1.736|
;;;108    	else if(Rc_C.ARMED==1)		data_to_send[_cnt++]=0xA1;
0002e0  4858              LDR      r0,|L1.1092|
0002e2  7800              LDRB     r0,[r0,#0]  ; Rc_C
0002e4  2801              CMP      r0,#1
0002e6  d105              BNE      |L1.756|
0002e8  22a1              MOVS     r2,#0xa1
0002ea  4620              MOV      r0,r4
0002ec  1c61              ADDS     r1,r4,#1
0002ee  b2cc              UXTB     r4,r1
0002f0  494b              LDR      r1,|L1.1056|
0002f2  540a              STRB     r2,[r1,r0]
                  |L1.756|
;;;109    	
;;;110    	data_to_send[3] = _cnt-4;
0002f4  1f20              SUBS     r0,r4,#4
0002f6  494a              LDR      r1,|L1.1056|
0002f8  70c8              STRB     r0,[r1,#3]
;;;111    	
;;;112    	u8 sum = 0;
0002fa  2500              MOVS     r5,#0
;;;113    	for(u8 i=0;i<_cnt;i++)
0002fc  2000              MOVS     r0,#0
0002fe  e005              B        |L1.780|
                  |L1.768|
;;;114    		sum += data_to_send[i];
000300  4947              LDR      r1,|L1.1056|
000302  5c09              LDRB     r1,[r1,r0]
000304  4429              ADD      r1,r1,r5
000306  b2cd              UXTB     r5,r1
000308  1c41              ADDS     r1,r0,#1              ;113
00030a  b2c8              UXTB     r0,r1                 ;113
                  |L1.780|
00030c  42a0              CMP      r0,r4                 ;113
00030e  dbf7              BLT      |L1.768|
;;;115    	data_to_send[_cnt++]=sum;
000310  4620              MOV      r0,r4
000312  1c61              ADDS     r1,r4,#1
000314  b2cc              UXTB     r4,r1
000316  4942              LDR      r1,|L1.1056|
000318  540d              STRB     r5,[r1,r0]
;;;116    #ifdef DATA_TRANSFER_USE_USART
;;;117    	Uart1_Put_Buf(data_to_send,_cnt);
;;;118    #else
;;;119    	NRF_TxPacket(data_to_send,_cnt);
00031a  4621              MOV      r1,r4
00031c  4840              LDR      r0,|L1.1056|
00031e  f7fffffe          BL       NRF_TxPacket
;;;120    #endif
;;;121    }
000322  bd7c              POP      {r2-r6,pc}
;;;122    void Data_Send_Senser(void)
                          ENDP

                  Data_Exchange PROC
;;;55     }
;;;56     void Data_Exchange(void)
000324  b510              PUSH     {r4,lr}
;;;57     {
;;;58     #ifdef DATA_TRANSFER_USE_SPI_NRF
;;;59     	Nrf_Check_Event();
000326  f7fffffe          BL       Nrf_Check_Event
;;;60     	u8 sta = Nrf_Get_FIFOSta();
00032a  f7fffffe          BL       Nrf_Get_FIFOSta
00032e  4604              MOV      r4,r0
;;;61     	if((sta & (1<<4))==0)
000330  f0140f10          TST      r4,#0x10
000334  d100              BNE      |L1.824|
                  |L1.822|
;;;62     	{
;;;63     		return;
;;;64     	}
;;;65     		
;;;66     #endif
;;;67     	if(Send_Status)
;;;68     	{
;;;69     		Send_Status = 0;
;;;70     		Data_Send_Status();
;;;71     	}
;;;72     	else if(Send_RCData)
;;;73     	{
;;;74     		Send_RCData = 0;
;;;75     		Data_Send_RCData();
;;;76     	}
;;;77     	else if(Send_MotoPwm)
;;;78     	{
;;;79     		Send_MotoPwm = 0;
;;;80     		Data_Send_MotoPWM();
;;;81     	}
;;;82     }
000336  bd10              POP      {r4,pc}
                  |L1.824|
000338  4843              LDR      r0,|L1.1096|
00033a  7800              LDRB     r0,[r0,#0]            ;67  ; Send_Status
00033c  b128              CBZ      r0,|L1.842|
00033e  2000              MOVS     r0,#0                 ;69
000340  4941              LDR      r1,|L1.1096|
000342  7008              STRB     r0,[r1,#0]            ;69
000344  f7fffffe          BL       Data_Send_Status
000348  e010              B        |L1.876|
                  |L1.842|
00034a  4840              LDR      r0,|L1.1100|
00034c  7800              LDRB     r0,[r0,#0]            ;72  ; Send_RCData
00034e  b128              CBZ      r0,|L1.860|
000350  2000              MOVS     r0,#0                 ;74
000352  493e              LDR      r1,|L1.1100|
000354  7008              STRB     r0,[r1,#0]            ;74
000356  f7fffffe          BL       Data_Send_RCData
00035a  e007              B        |L1.876|
                  |L1.860|
00035c  483c              LDR      r0,|L1.1104|
00035e  7800              LDRB     r0,[r0,#0]            ;77  ; Send_MotoPwm
000360  b120              CBZ      r0,|L1.876|
000362  2000              MOVS     r0,#0                 ;79
000364  493a              LDR      r1,|L1.1104|
000366  7008              STRB     r0,[r1,#0]            ;79
000368  f7fffffe          BL       Data_Send_MotoPWM
                  |L1.876|
00036c  bf00              NOP      
00036e  e7e2              B        |L1.822|
;;;83     void Data_Send_Status(void)
                          ENDP

                  Data_Send_Senser PROC
;;;121    }
;;;122    void Data_Send_Senser(void)
000370  4770              BX       lr
;;;123    {
;;;124    
;;;125    }
;;;126    void Data_Send_RCData(void)
                          ENDP

                  Data_Send_VOTAGE PROC
;;;186    }
;;;187    void Data_Send_VOTAGE(void)
000372  e92d4ffe          PUSH     {r1-r11,lr}
;;;188    {
;;;189    	u8 _cnt=0;
000376  f04f0a00          MOV      r10,#0
;;;190    	float adc;
;;;191    	adc = (ADC_ConvertedValue / 4096.0) * 3.3 * 11.0;
00037a  4836              LDR      r0,|L1.1108|
00037c  8800              LDRH     r0,[r0,#0]  ; ADC_ConvertedValue
00037e  f7fffffe          BL       __aeabi_ui2d
000382  2200              MOVS     r2,#0
000384  4b34              LDR      r3,|L1.1112|
000386  e9cd0100          STRD     r0,r1,[sp,#0]
00038a  f7fffffe          BL       __aeabi_ddiv
00038e  4606              MOV      r6,r0
000390  f04f3266          MOV      r2,#0x66666666
000394  4b31              LDR      r3,|L1.1116|
000396  f7fffffe          BL       __aeabi_dmul
00039a  4604              MOV      r4,r0
00039c  2200              MOVS     r2,#0
00039e  4b30              LDR      r3,|L1.1120|
0003a0  f7fffffe          BL       __aeabi_dmul
0003a4  4680              MOV      r8,r0
0003a6  f7fffffe          BL       __aeabi_d2f
0003aa  9002              STR      r0,[sp,#8]
;;;192    	ADC_ConvertedValue = (u32)(adc * 100);
0003ac  4923              LDR      r1,|L1.1084|
0003ae  9802              LDR      r0,[sp,#8]
0003b0  f7fffffe          BL       __aeabi_fmul
0003b4  4604              MOV      r4,r0
0003b6  f7fffffe          BL       __aeabi_f2uiz
0003ba  4926              LDR      r1,|L1.1108|
0003bc  8008              STRH     r0,[r1,#0]
;;;193    	data_to_send[_cnt++]=0xAA;
0003be  22aa              MOVS     r2,#0xaa
0003c0  4651              MOV      r1,r10
0003c2  f10a0a01          ADD      r10,r10,#1
0003c6  4816              LDR      r0,|L1.1056|
0003c8  5442              STRB     r2,[r0,r1]
;;;194    	data_to_send[_cnt++]=0xAA;
0003ca  4651              MOV      r1,r10
0003cc  f10a0a01          ADD      r10,r10,#1
0003d0  5442              STRB     r2,[r0,r1]
;;;195    	data_to_send[_cnt++]=0x05;
0003d2  2205              MOVS     r2,#5
0003d4  4651              MOV      r1,r10
0003d6  f10a0a01          ADD      r10,r10,#1
0003da  5442              STRB     r2,[r0,r1]
;;;196    	data_to_send[_cnt++]=0;
0003dc  2200              MOVS     r2,#0
0003de  4651              MOV      r1,r10
0003e0  f10a0a01          ADD      r10,r10,#1
0003e4  5442              STRB     r2,[r0,r1]
;;;197    	data_to_send[_cnt++]=BYTE1(ADC_ConvertedValue);
0003e6  481b              LDR      r0,|L1.1108|
0003e8  7842              LDRB     r2,[r0,#1]  ; ADC_ConvertedValue
0003ea  4651              MOV      r1,r10
0003ec  f10a0a01          ADD      r10,r10,#1
0003f0  480b              LDR      r0,|L1.1056|
0003f2  5442              STRB     r2,[r0,r1]
;;;198    	data_to_send[_cnt++]=BYTE0(ADC_ConvertedValue);
0003f4  4817              LDR      r0,|L1.1108|
0003f6  7802              LDRB     r2,[r0,#0]  ; ADC_ConvertedValue
0003f8  4651              MOV      r1,r10
0003fa  f10a0a01          ADD      r10,r10,#1
0003fe  4808              LDR      r0,|L1.1056|
000400  5442              STRB     r2,[r0,r1]
;;;199    	data_to_send[_cnt++]=BYTE1(ADC_ConvertedValue);
000402  4814              LDR      r0,|L1.1108|
000404  7842              LDRB     r2,[r0,#1]  ; ADC_ConvertedValue
000406  4651              MOV      r1,r10
000408  f10a0a01          ADD      r10,r10,#1
00040c  4804              LDR      r0,|L1.1056|
00040e  5442              STRB     r2,[r0,r1]
;;;200    	data_to_send[_cnt++]=BYTE0(ADC_ConvertedValue);
000410  4810              LDR      r0,|L1.1108|
000412  7802              LDRB     r2,[r0,#0]  ; ADC_ConvertedValue
000414  4650              MOV      r0,r10
000416  1c41              ADDS     r1,r0,#1
000418  e024              B        |L1.1124|
00041a  0000              DCW      0x0000
                  |L1.1052|
                          DCD      NRF24L01_RXDATA
                  |L1.1056|
                          DCD      data_to_send
                  |L1.1060|
                          DCD      Moto_PWM_1
                  |L1.1064|
                          DCD      Moto_PWM_2
                  |L1.1068|
                          DCD      Moto_PWM_3
                  |L1.1072|
                          DCD      Moto_PWM_4
                  |L1.1076|
                          DCD      Rc_D
                  |L1.1080|
                          DCD      Att_Angle
                  |L1.1084|
                          DCD      0x42c80000
                  |L1.1088|
                          DCD      Alt
                  |L1.1092|
                          DCD      Rc_C
                  |L1.1096|
                          DCD      Send_Status
                  |L1.1100|
                          DCD      Send_RCData
                  |L1.1104|
                          DCD      Send_MotoPwm
                  |L1.1108|
                          DCD      ADC_ConvertedValue
                  |L1.1112|
                          DCD      0x40b00000
                  |L1.1116|
                          DCD      0x400a6666
                  |L1.1120|
                          DCD      0x40260000
                  |L1.1124|
000464  f0010aff          AND      r10,r1,#0xff
000468  491f              LDR      r1,|L1.1256|
00046a  540a              STRB     r2,[r1,r0]
;;;201    	data_to_send[_cnt++]=BYTE1(ADC_ConvertedValue);
00046c  481f              LDR      r0,|L1.1260|
00046e  7842              LDRB     r2,[r0,#1]  ; ADC_ConvertedValue
000470  4651              MOV      r1,r10
000472  1c48              ADDS     r0,r1,#1
000474  f0000aff          AND      r10,r0,#0xff
000478  481b              LDR      r0,|L1.1256|
00047a  5442              STRB     r2,[r0,r1]
;;;202    	data_to_send[_cnt++]=BYTE0(ADC_ConvertedValue);
00047c  481b              LDR      r0,|L1.1260|
00047e  7802              LDRB     r2,[r0,#0]  ; ADC_ConvertedValue
000480  4650              MOV      r0,r10
000482  1c41              ADDS     r1,r0,#1
000484  f0010aff          AND      r10,r1,#0xff
000488  4917              LDR      r1,|L1.1256|
00048a  540a              STRB     r2,[r1,r0]
;;;203    	data_to_send[_cnt++]=BYTE1(ADC_ConvertedValue);
00048c  4817              LDR      r0,|L1.1260|
00048e  7842              LDRB     r2,[r0,#1]  ; ADC_ConvertedValue
000490  4650              MOV      r0,r10
000492  1c41              ADDS     r1,r0,#1
000494  f0010aff          AND      r10,r1,#0xff
000498  4913              LDR      r1,|L1.1256|
00049a  540a              STRB     r2,[r1,r0]
;;;204    	data_to_send[_cnt++]=BYTE0(ADC_ConvertedValue);
00049c  4813              LDR      r0,|L1.1260|
00049e  7802              LDRB     r2,[r0,#0]  ; ADC_ConvertedValue
0004a0  4650              MOV      r0,r10
0004a2  1c41              ADDS     r1,r0,#1
0004a4  f0010aff          AND      r10,r1,#0xff
0004a8  490f              LDR      r1,|L1.1256|
0004aa  540a              STRB     r2,[r1,r0]
;;;205    	
;;;206    	data_to_send[3] = _cnt-4;
0004ac  f1aa0004          SUB      r0,r10,#4
0004b0  70c8              STRB     r0,[r1,#3]
;;;207    	
;;;208    	u8 sum = 0;
0004b2  f04f0b00          MOV      r11,#0
;;;209    	for(u8 i=0;i<_cnt;i++)
0004b6  2000              MOVS     r0,#0
0004b8  e006              B        |L1.1224|
                  |L1.1210|
;;;210    		sum += data_to_send[i];
0004ba  490b              LDR      r1,|L1.1256|
0004bc  5c09              LDRB     r1,[r1,r0]
0004be  4459              ADD      r1,r1,r11
0004c0  f0010bff          AND      r11,r1,#0xff
0004c4  1c41              ADDS     r1,r0,#1              ;209
0004c6  b2c8              UXTB     r0,r1                 ;209
                  |L1.1224|
0004c8  4550              CMP      r0,r10                ;209
0004ca  dbf6              BLT      |L1.1210|
;;;211    	
;;;212    	data_to_send[_cnt++]=sum;
0004cc  4650              MOV      r0,r10
0004ce  1c41              ADDS     r1,r0,#1
0004d0  f0010aff          AND      r10,r1,#0xff
0004d4  4904              LDR      r1,|L1.1256|
0004d6  f801b000          STRB     r11,[r1,r0]
;;;213    	
;;;214    #ifdef DATA_TRANSFER_USE_USART
;;;215    	Uart1_Put_Buf(data_to_send,_cnt);
;;;216    #else
;;;217    	NRF_TxPacket(data_to_send,_cnt);
0004da  4651              MOV      r1,r10
0004dc  4802              LDR      r0,|L1.1256|
0004de  f7fffffe          BL       NRF_TxPacket
;;;218    #endif
;;;219    }
0004e2  e8bd8ffe          POP      {r1-r11,pc}
                          ENDP

0004e6  0000              DCW      0x0000
                  |L1.1256|
                          DCD      data_to_send
                  |L1.1260|
                          DCD      ADC_ConvertedValue

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  data_to_send
                          %        50

                          AREA ||.data||, DATA, ALIGN=0

                  Data_Check
000000  00                DCB      0x00
                  Send_Status
000001  00                DCB      0x00
                  Send_Senser
000002  00                DCB      0x00
                  Send_RCData
000003  00                DCB      0x00
                  Send_Offset
000004  00                DCB      0x00
                  Send_PID1
000005  00                DCB      0x00
                  Send_PID2
000006  00                DCB      0x00
                  Send_PID3
000007  00                DCB      0x00
                  Send_PID4
000008  00                DCB      0x00
                  Send_PID5
000009  00                DCB      0x00
                  Send_PID6
00000a  00                DCB      0x00
                  Send_MotoPwm
00000b  00                DCB      0x00
