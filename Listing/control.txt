; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o..\output\control.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\control.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\BSP -I..\CMSIS -I..\Lib\inc -I..\User -I"E:\Program files\keil-arm\ARM\RV31\INC" -I"E:\Program files\keil-arm\ARM\CMSIS\Include" -I"E:\Program files\keil-arm\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\output\control.crf ..\User\Control.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Control PROC
;;;9      
;;;10     void Control(T_float_angle *att_in,T_int16_xyz *gyr_in, T_RC_Data *rc_in, u8 armed)
000000  e92d4ffe          PUSH     {r1-r11,lr}
;;;11     {
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
000008  4614              MOV      r4,r2
00000a  461f              MOV      r7,r3
;;;12     	T_float_angle angle;
;;;13     	angle.rol = att_in->rol - (rc_in->ROLL-3000)/12;
00000c  f9b40000          LDRSH    r0,[r4,#0]
000010  f6a030b8          SUB      r0,r0,#0xbb8
000014  210c              MOVS     r1,#0xc
000016  fb90f9f1          SDIV     r9,r0,r1
00001a  4648              MOV      r0,r9
00001c  f7fffffe          BL       __aeabi_i2f
000020  4680              MOV      r8,r0
000022  6831              LDR      r1,[r6,#0]
000024  f7fffffe          BL       __aeabi_frsub
000028  9000              STR      r0,[sp,#0]
;;;14     	angle.pit = att_in->pit - (rc_in->PITCH-3000)/12;
00002a  f9b40002          LDRSH    r0,[r4,#2]
00002e  f6a030b8          SUB      r0,r0,#0xbb8
000032  210c              MOVS     r1,#0xc
000034  fb90f9f1          SDIV     r9,r0,r1
000038  4648              MOV      r0,r9
00003a  f7fffffe          BL       __aeabi_i2f
00003e  4680              MOV      r8,r0
000040  6871              LDR      r1,[r6,#4]
000042  f7fffffe          BL       __aeabi_frsub
000046  9001              STR      r0,[sp,#4]
;;;15     	
;;;16     	rol_i += angle.rol;
000048  48c3              LDR      r0,|L1.856|
00004a  9900              LDR      r1,[sp,#0]
00004c  6800              LDR      r0,[r0,#0]  ; rol_i
00004e  f7fffffe          BL       __aeabi_fadd
000052  49c1              LDR      r1,|L1.856|
000054  6008              STR      r0,[r1,#0]  ; rol_i
;;;17     	if(rol_i>4000)
000056  49c1              LDR      r1,|L1.860|
000058  48bf              LDR      r0,|L1.856|
00005a  6800              LDR      r0,[r0,#0]  ; rol_i
00005c  f7fffffe          BL       __aeabi_cfrcmple
000060  d202              BCS      |L1.104|
;;;18     	rol_i=4000;
000062  48be              LDR      r0,|L1.860|
000064  49bc              LDR      r1,|L1.856|
000066  6008              STR      r0,[r1,#0]  ; rol_i
                  |L1.104|
;;;19     	if(rol_i<-4000)
000068  49bd              LDR      r1,|L1.864|
00006a  48bb              LDR      r0,|L1.856|
00006c  6800              LDR      r0,[r0,#0]  ; rol_i
00006e  f7fffffe          BL       __aeabi_cfcmple
000072  d202              BCS      |L1.122|
;;;20     	rol_i=-4000;
000074  48ba              LDR      r0,|L1.864|
000076  49b8              LDR      r1,|L1.856|
000078  6008              STR      r0,[r1,#0]  ; rol_i
                  |L1.122|
;;;21     
;;;22     	PID_ROL.pout = PID_ROL.P * angle.rol;
00007a  4aba              LDR      r2,|L1.868|
00007c  9900              LDR      r1,[sp,#0]
00007e  6810              LDR      r0,[r2,#0]  ; PID_ROL
000080  f7fffffe          BL       __aeabi_fmul
000084  49b7              LDR      r1,|L1.868|
000086  6048              STR      r0,[r1,#4]  ; PID_ROL
;;;23     	PID_ROL.dout = -PID_ROL.D * gyr_in->Y;
000088  f9b50002          LDRSH    r0,[r5,#2]
00008c  f7fffffe          BL       __aeabi_i2f
000090  4681              MOV      r9,r0
000092  48b4              LDR      r0,|L1.868|
000094  6900              LDR      r0,[r0,#0x10]  ; PID_ROL
000096  f0804800          EOR      r8,r0,#0x80000000
00009a  4649              MOV      r1,r9
00009c  4640              MOV      r0,r8
00009e  f7fffffe          BL       __aeabi_fmul
0000a2  49b0              LDR      r1,|L1.868|
0000a4  6148              STR      r0,[r1,#0x14]  ; PID_ROL
;;;24     	PID_ROL.iout = PID_ROL.I * rol_i;
0000a6  6888              LDR      r0,[r1,#8]  ; PID_ROL
0000a8  49ab              LDR      r1,|L1.856|
0000aa  6809              LDR      r1,[r1,#0]  ; rol_i
0000ac  f7fffffe          BL       __aeabi_fmul
0000b0  49ac              LDR      r1,|L1.868|
0000b2  60c8              STR      r0,[r1,#0xc]  ; PID_ROL
;;;25     
;;;26     	pit_i += angle.pit;
0000b4  48ac              LDR      r0,|L1.872|
0000b6  9901              LDR      r1,[sp,#4]
0000b8  6800              LDR      r0,[r0,#0]  ; pit_i
0000ba  f7fffffe          BL       __aeabi_fadd
0000be  49aa              LDR      r1,|L1.872|
0000c0  6008              STR      r0,[r1,#0]  ; pit_i
;;;27     	if(pit_i>4000)
0000c2  49a6              LDR      r1,|L1.860|
0000c4  48a8              LDR      r0,|L1.872|
0000c6  6800              LDR      r0,[r0,#0]  ; pit_i
0000c8  f7fffffe          BL       __aeabi_cfrcmple
0000cc  d202              BCS      |L1.212|
;;;28     	pit_i=4000;
0000ce  48a3              LDR      r0,|L1.860|
0000d0  49a5              LDR      r1,|L1.872|
0000d2  6008              STR      r0,[r1,#0]  ; pit_i
                  |L1.212|
;;;29     	if(pit_i<-4000)
0000d4  49a2              LDR      r1,|L1.864|
0000d6  48a4              LDR      r0,|L1.872|
0000d8  6800              LDR      r0,[r0,#0]  ; pit_i
0000da  f7fffffe          BL       __aeabi_cfcmple
0000de  d202              BCS      |L1.230|
;;;30     	pit_i=-4000;
0000e0  489f              LDR      r0,|L1.864|
0000e2  49a1              LDR      r1,|L1.872|
0000e4  6008              STR      r0,[r1,#0]  ; pit_i
                  |L1.230|
;;;31     
;;;32     	PID_PIT.pout = PID_PIT.P * angle.pit;
0000e6  4aa1              LDR      r2,|L1.876|
0000e8  9901              LDR      r1,[sp,#4]
0000ea  6810              LDR      r0,[r2,#0]  ; PID_PIT
0000ec  f7fffffe          BL       __aeabi_fmul
0000f0  499e              LDR      r1,|L1.876|
0000f2  6048              STR      r0,[r1,#4]  ; PID_PIT
;;;33     	PID_PIT.dout = PID_PIT.D * gyr_in->X;
0000f4  f9b50000          LDRSH    r0,[r5,#0]
0000f8  f7fffffe          BL       __aeabi_i2f
0000fc  4680              MOV      r8,r0
0000fe  489b              LDR      r0,|L1.876|
000100  6901              LDR      r1,[r0,#0x10]  ; PID_PIT
000102  4640              MOV      r0,r8
000104  f7fffffe          BL       __aeabi_fmul
000108  4998              LDR      r1,|L1.876|
00010a  6148              STR      r0,[r1,#0x14]  ; PID_PIT
;;;34     	PID_PIT.iout = PID_PIT.I * pit_i;
00010c  6888              LDR      r0,[r1,#8]  ; PID_PIT
00010e  4996              LDR      r1,|L1.872|
000110  6809              LDR      r1,[r1,#0]  ; pit_i
000112  f7fffffe          BL       __aeabi_fmul
000116  4995              LDR      r1,|L1.876|
000118  60c8              STR      r0,[r1,#0xc]  ; PID_PIT
;;;35     	if(rc_in->YAW<2800||rc_in->YAW>3200)
00011a  f9b40006          LDRSH    r0,[r4,#6]
00011e  f5b06f2f          CMP      r0,#0xaf0
000122  db04              BLT      |L1.302|
000124  f9b40006          LDRSH    r0,[r4,#6]
000128  f5b06f48          CMP      r0,#0xc80
00012c  dd07              BLE      |L1.318|
                  |L1.302|
;;;36     	{gyr_in->Z=gyr_in->Z+(rc_in->YAW-3000)*2;}
00012e  88a9              LDRH     r1,[r5,#4]
000130  88e0              LDRH     r0,[r4,#6]
000132  f6a030b8          SUB      r0,r0,#0xbb8
000136  eb010040          ADD      r0,r1,r0,LSL #1
00013a  b200              SXTH     r0,r0
00013c  80a8              STRH     r0,[r5,#4]
                  |L1.318|
;;;37     	yaw_p+=gyr_in->Z*0.0609756f*0.002f;// +(Rc_Get.YAW-1500)*30
00013e  f9b50004          LDRSH    r0,[r5,#4]
000142  f7fffffe          BL       __aeabi_i2f
000146  4682              MOV      r10,r0
000148  4989              LDR      r1,|L1.880|
00014a  f7fffffe          BL       __aeabi_fmul
00014e  4681              MOV      r9,r0
000150  4988              LDR      r1,|L1.884|
000152  f7fffffe          BL       __aeabi_fmul
000156  4680              MOV      r8,r0
000158  4887              LDR      r0,|L1.888|
00015a  6801              LDR      r1,[r0,#0]  ; yaw_p
00015c  4640              MOV      r0,r8
00015e  f7fffffe          BL       __aeabi_fadd
000162  4985              LDR      r1,|L1.888|
000164  6008              STR      r0,[r1,#0]  ; yaw_p
;;;38     	if(yaw_p>20)
000166  4985              LDR      r1,|L1.892|
000168  4883              LDR      r0,|L1.888|
00016a  6800              LDR      r0,[r0,#0]  ; yaw_p
00016c  f7fffffe          BL       __aeabi_cfrcmple
000170  d202              BCS      |L1.376|
;;;39     		yaw_p=20;
000172  4882              LDR      r0,|L1.892|
000174  4980              LDR      r1,|L1.888|
000176  6008              STR      r0,[r1,#0]  ; yaw_p
                  |L1.376|
;;;40     	if(yaw_p<-20)
000178  4981              LDR      r1,|L1.896|
00017a  487f              LDR      r0,|L1.888|
00017c  6800              LDR      r0,[r0,#0]  ; yaw_p
00017e  f7fffffe          BL       __aeabi_cfcmple
000182  d202              BCS      |L1.394|
;;;41     		yaw_p=-20;
000184  487e              LDR      r0,|L1.896|
000186  497c              LDR      r1,|L1.888|
000188  6008              STR      r0,[r1,#0]  ; yaw_p
                  |L1.394|
;;;42     
;;;43     
;;;44     	PID_YAW.pout=PID_YAW.P*yaw_p;
00018a  497e              LDR      r1,|L1.900|
00018c  6808              LDR      r0,[r1,#0]  ; PID_YAW
00018e  497a              LDR      r1,|L1.888|
000190  6809              LDR      r1,[r1,#0]  ; yaw_p
000192  f7fffffe          BL       __aeabi_fmul
000196  497b              LDR      r1,|L1.900|
000198  6048              STR      r0,[r1,#4]  ; PID_YAW
;;;45     	PID_YAW.dout = PID_YAW.D * gyr_in->Z;				   
00019a  f9b50004          LDRSH    r0,[r5,#4]
00019e  f7fffffe          BL       __aeabi_i2f
0001a2  4680              MOV      r8,r0
0001a4  4877              LDR      r0,|L1.900|
0001a6  6901              LDR      r1,[r0,#0x10]  ; PID_YAW
0001a8  4640              MOV      r0,r8
0001aa  f7fffffe          BL       __aeabi_fmul
0001ae  4975              LDR      r1,|L1.900|
0001b0  6148              STR      r0,[r1,#0x14]  ; PID_YAW
;;;46     	
;;;47     	if(rc_in->THROTTLE<2200)
0001b2  f9b40004          LDRSH    r0,[r4,#4]
0001b6  f6400198          MOV      r1,#0x898
0001ba  4288              CMP      r0,r1
0001bc  da06              BGE      |L1.460|
;;;48     	{		
;;;49     		pit_i=0;
0001be  2000              MOVS     r0,#0
0001c0  4969              LDR      r1,|L1.872|
0001c2  6008              STR      r0,[r1,#0]  ; pit_i
;;;50     		rol_i=0;
0001c4  4964              LDR      r1,|L1.856|
0001c6  6008              STR      r0,[r1,#0]  ; rol_i
;;;51     		yaw_p=0;
0001c8  496b              LDR      r1,|L1.888|
0001ca  6008              STR      r0,[r1,#0]  ; yaw_p
                  |L1.460|
;;;52     	}
;;;53     
;;;54     	PID_ROL.OUT =  (-PID_ROL.pout)-PID_ROL.iout +PID_ROL.dout;//
0001cc  4865              LDR      r0,|L1.868|
0001ce  6840              LDR      r0,[r0,#4]  ; PID_ROL
0001d0  f0804900          EOR      r9,r0,#0x80000000
0001d4  4863              LDR      r0,|L1.868|
0001d6  68c1              LDR      r1,[r0,#0xc]  ; PID_ROL
0001d8  4648              MOV      r0,r9
0001da  f7fffffe          BL       __aeabi_fsub
0001de  4680              MOV      r8,r0
0001e0  4860              LDR      r0,|L1.868|
0001e2  6941              LDR      r1,[r0,#0x14]  ; PID_ROL
0001e4  4640              MOV      r0,r8
0001e6  f7fffffe          BL       __aeabi_fadd
0001ea  495e              LDR      r1,|L1.868|
0001ec  61c8              STR      r0,[r1,#0x1c]  ; PID_ROL
;;;55     	PID_PIT.OUT = PID_PIT.pout + PID_PIT.iout + PID_PIT.dout;
0001ee  4a5f              LDR      r2,|L1.876|
0001f0  68d1              LDR      r1,[r2,#0xc]  ; PID_PIT
0001f2  6850              LDR      r0,[r2,#4]  ; PID_PIT
0001f4  f7fffffe          BL       __aeabi_fadd
0001f8  4680              MOV      r8,r0
0001fa  485c              LDR      r0,|L1.876|
0001fc  6941              LDR      r1,[r0,#0x14]  ; PID_PIT
0001fe  4640              MOV      r0,r8
000200  f7fffffe          BL       __aeabi_fadd
000204  4959              LDR      r1,|L1.876|
000206  61c8              STR      r0,[r1,#0x1c]  ; PID_PIT
;;;56     	PID_YAW.OUT = PID_YAW.pout + PID_YAW.iout + PID_YAW.dout;
000208  4a5e              LDR      r2,|L1.900|
00020a  68d1              LDR      r1,[r2,#0xc]  ; PID_YAW
00020c  6850              LDR      r0,[r2,#4]  ; PID_YAW
00020e  f7fffffe          BL       __aeabi_fadd
000212  4680              MOV      r8,r0
000214  485b              LDR      r0,|L1.900|
000216  6941              LDR      r1,[r0,#0x14]  ; PID_YAW
000218  4640              MOV      r0,r8
00021a  f7fffffe          BL       __aeabi_fadd
00021e  4959              LDR      r1,|L1.900|
000220  61c8              STR      r0,[r1,#0x1c]  ; PID_YAW
;;;57      
;;;58     	if(rc_in->THROTTLE>2200&&armed)
000222  f9b40004          LDRSH    r0,[r4,#4]
000226  f6400198          MOV      r1,#0x898
00022a  4288              CMP      r0,r1
00022c  dd7b              BLE      |L1.806|
00022e  2f00              CMP      r7,#0
000230  d079              BEQ      |L1.806|
;;;59     	{
;;;60     		Moto_PWM_1 = rc_in->THROTTLE - 2200 - PID_ROL.OUT + PID_PIT.OUT + PID_YAW.OUT;
000232  f9b41004          LDRSH    r1,[r4,#4]
000236  f6a10098          SUB      r0,r1,#0x898
00023a  f7fffffe          BL       __aeabi_i2f
00023e  4683              MOV      r11,r0
000240  4848              LDR      r0,|L1.868|
000242  69c1              LDR      r1,[r0,#0x1c]  ; PID_ROL
000244  4658              MOV      r0,r11
000246  f7fffffe          BL       __aeabi_fsub
00024a  4682              MOV      r10,r0
00024c  4847              LDR      r0,|L1.876|
00024e  69c1              LDR      r1,[r0,#0x1c]  ; PID_PIT
000250  4650              MOV      r0,r10
000252  f7fffffe          BL       __aeabi_fadd
000256  4681              MOV      r9,r0
000258  484a              LDR      r0,|L1.900|
00025a  69c1              LDR      r1,[r0,#0x1c]  ; PID_YAW
00025c  4648              MOV      r0,r9
00025e  f7fffffe          BL       __aeabi_fadd
000262  4680              MOV      r8,r0
000264  f7fffffe          BL       __aeabi_f2iz
000268  b200              SXTH     r0,r0
00026a  4947              LDR      r1,|L1.904|
00026c  8008              STRH     r0,[r1,#0]
;;;61     		Moto_PWM_2 = rc_in->THROTTLE - 2200 - PID_ROL.OUT - PID_PIT.OUT - PID_YAW.OUT;
00026e  f9b41004          LDRSH    r1,[r4,#4]
000272  f6a10098          SUB      r0,r1,#0x898
000276  f7fffffe          BL       __aeabi_i2f
00027a  4683              MOV      r11,r0
00027c  4839              LDR      r0,|L1.868|
00027e  69c1              LDR      r1,[r0,#0x1c]  ; PID_ROL
000280  4658              MOV      r0,r11
000282  f7fffffe          BL       __aeabi_fsub
000286  4682              MOV      r10,r0
000288  4838              LDR      r0,|L1.876|
00028a  69c1              LDR      r1,[r0,#0x1c]  ; PID_PIT
00028c  4650              MOV      r0,r10
00028e  f7fffffe          BL       __aeabi_fsub
000292  4681              MOV      r9,r0
000294  483b              LDR      r0,|L1.900|
000296  69c1              LDR      r1,[r0,#0x1c]  ; PID_YAW
000298  4648              MOV      r0,r9
00029a  f7fffffe          BL       __aeabi_fsub
00029e  4680              MOV      r8,r0
0002a0  f7fffffe          BL       __aeabi_f2iz
0002a4  b200              SXTH     r0,r0
0002a6  4939              LDR      r1,|L1.908|
0002a8  8008              STRH     r0,[r1,#0]
;;;62     		Moto_PWM_3 = rc_in->THROTTLE - 2200 + PID_ROL.OUT - PID_PIT.OUT + PID_YAW.OUT;
0002aa  f9b41004          LDRSH    r1,[r4,#4]
0002ae  f6a10098          SUB      r0,r1,#0x898
0002b2  f7fffffe          BL       __aeabi_i2f
0002b6  4683              MOV      r11,r0
0002b8  482a              LDR      r0,|L1.868|
0002ba  69c1              LDR      r1,[r0,#0x1c]  ; PID_ROL
0002bc  4658              MOV      r0,r11
0002be  f7fffffe          BL       __aeabi_fadd
0002c2  4682              MOV      r10,r0
0002c4  4829              LDR      r0,|L1.876|
0002c6  69c1              LDR      r1,[r0,#0x1c]  ; PID_PIT
0002c8  4650              MOV      r0,r10
0002ca  f7fffffe          BL       __aeabi_fsub
0002ce  4681              MOV      r9,r0
0002d0  482c              LDR      r0,|L1.900|
0002d2  69c1              LDR      r1,[r0,#0x1c]  ; PID_YAW
0002d4  4648              MOV      r0,r9
0002d6  f7fffffe          BL       __aeabi_fadd
0002da  4680              MOV      r8,r0
0002dc  f7fffffe          BL       __aeabi_f2iz
0002e0  b200              SXTH     r0,r0
0002e2  492b              LDR      r1,|L1.912|
0002e4  8008              STRH     r0,[r1,#0]
;;;63     		Moto_PWM_4 = rc_in->THROTTLE - 2200 + PID_ROL.OUT + PID_PIT.OUT - PID_YAW.OUT;
0002e6  f9b41004          LDRSH    r1,[r4,#4]
0002ea  f6a10098          SUB      r0,r1,#0x898
0002ee  f7fffffe          BL       __aeabi_i2f
0002f2  4683              MOV      r11,r0
0002f4  481b              LDR      r0,|L1.868|
0002f6  69c1              LDR      r1,[r0,#0x1c]  ; PID_ROL
0002f8  4658              MOV      r0,r11
0002fa  f7fffffe          BL       __aeabi_fadd
0002fe  4682              MOV      r10,r0
000300  481a              LDR      r0,|L1.876|
000302  69c1              LDR      r1,[r0,#0x1c]  ; PID_PIT
000304  4650              MOV      r0,r10
000306  f7fffffe          BL       __aeabi_fadd
00030a  4681              MOV      r9,r0
00030c  481d              LDR      r0,|L1.900|
00030e  69c1              LDR      r1,[r0,#0x1c]  ; PID_YAW
000310  4648              MOV      r0,r9
000312  f7fffffe          BL       __aeabi_fsub
000316  4680              MOV      r8,r0
000318  f7fffffe          BL       __aeabi_f2iz
00031c  b200              SXTH     r0,r0
00031e  491d              LDR      r1,|L1.916|
000320  8008              STRH     r0,[r1,#0]
000322  e009              B        |L1.824|
000324  e7ff              B        |L1.806|
                  |L1.806|
;;;64     	}
;;;65     	else
;;;66     	{
;;;67     		Moto_PWM_1 = 0;
000326  2000              MOVS     r0,#0
000328  4917              LDR      r1,|L1.904|
00032a  8008              STRH     r0,[r1,#0]
;;;68     		Moto_PWM_2 = 0;
00032c  4917              LDR      r1,|L1.908|
00032e  8008              STRH     r0,[r1,#0]
;;;69     		Moto_PWM_3 = 0;
000330  4917              LDR      r1,|L1.912|
000332  8008              STRH     r0,[r1,#0]
;;;70     		Moto_PWM_4 = 0;
000334  4917              LDR      r1,|L1.916|
000336  8008              STRH     r0,[r1,#0]
                  |L1.824|
;;;71     	}
;;;72     	motor_Control(Moto_PWM_1,Moto_PWM_2,Moto_PWM_3,Moto_PWM_4);
000338  4816              LDR      r0,|L1.916|
00033a  f9b03000          LDRSH    r3,[r0,#0]  ; Moto_PWM_4
00033e  4814              LDR      r0,|L1.912|
000340  f9b02000          LDRSH    r2,[r0,#0]  ; Moto_PWM_3
000344  4811              LDR      r0,|L1.908|
000346  f9b01000          LDRSH    r1,[r0,#0]  ; Moto_PWM_2
00034a  480f              LDR      r0,|L1.904|
00034c  f9b00000          LDRSH    r0,[r0,#0]  ; Moto_PWM_1
000350  f7fffffe          BL       motor_Control
;;;73     }
000354  e8bd8ffe          POP      {r1-r11,pc}
                          ENDP

                  |L1.856|
                          DCD      rol_i
                  |L1.860|
                          DCD      0x457a0000
                  |L1.864|
                          DCD      0xc57a0000
                  |L1.868|
                          DCD      PID_ROL
                  |L1.872|
                          DCD      pit_i
                  |L1.876|
                          DCD      PID_PIT
                  |L1.880|
                          DCD      0x3d79c18d
                  |L1.884|
                          DCD      0x3b03126f
                  |L1.888|
                          DCD      yaw_p
                  |L1.892|
                          DCD      0x41a00000
                  |L1.896|
                          DCD      0xc1a00000
                  |L1.900|
                          DCD      PID_YAW
                  |L1.904|
                          DCD      Moto_PWM_1
                  |L1.908|
                          DCD      Moto_PWM_2
                  |L1.912|
                          DCD      Moto_PWM_3
                  |L1.916|
                          DCD      Moto_PWM_4

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  PID_ROL
                          %        32
                  PID_PIT
                          %        32
                  PID_YAW
                          %        32
                  PID_ALT
                          %        32
                  PID_POS
                          %        32

                          AREA ||.data||, DATA, ALIGN=2

                  getlast_roll
000000  0000              DCW      0x0000
                  geilast_pitch
000002  0000              DCW      0x0000
                  rol_i
000004  00000000          DCFS     0x00000000 ; 0
                  pit_i
000008  00000000          DCFS     0x00000000 ; 0
                  yaw_p
00000c  00000000          DCFS     0x00000000 ; 0
                  Moto_PWM_1
000010  0000              DCW      0x0000
                  Moto_PWM_2
000012  0000              DCW      0x0000
                  Moto_PWM_3
000014  0000              DCW      0x0000
                  Moto_PWM_4
000016  0000              DCW      0x0000
